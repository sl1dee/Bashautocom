{
  "version": 3,
  "sources": ["../../node_modules/@consta/src/icons/IconSelect/IconSelect_size_m.tsx", "../../node_modules/@consta/src/icons/IconSelect/IconSelect_size_s.tsx", "../../node_modules/@consta/src/icons/IconSelect/IconSelect_size_xs.tsx", "../../node_modules/@consta/src/icons/IconSelect/IconSelect.tsx", "../../node_modules/@consta/src/hooks/useMutableRef/useMutableRef.ts", "../../node_modules/@consta/src/hooks/useClickOutside/useClickOutside.tsx", "../../node_modules/@consta/src/mixs/MixSpace/MixSpace.tsx", "../../node_modules/@consta/src/components/Popover/Popover.tsx", "../../node_modules/@consta/src/components/PortalWithTheme/PortalWithTheme.tsx", "../../node_modules/@consta/src/components/PortalWithTheme/PortalWithThemeContext/PortalWithThemeContext.tsx", "../../node_modules/@consta/src/utils/isRenderProp.ts", "../../node_modules/@consta/src/components/Popover/helpers.ts", "../../node_modules/@consta/src/components/Popover/usePopoverReposition.ts"],
  "sourcesContent": ["import * as React from 'react';\nimport { SVGProps } from 'react';\n\nconst IconSelectSizeM = (props: SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path d=\"m6.5 9 5.5 6 5.5-6h-11z\" />\n  </svg>\n);\nexport default IconSelectSizeM;\n", "import * as React from 'react';\nimport { SVGProps } from 'react';\n\nconst IconSelectSizeS = (props: SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path d=\"M3.5 5 8 10l4.5-5h-9z\" />\n  </svg>\n);\nexport default IconSelectSizeS;\n", "import * as React from 'react';\nimport { SVGProps } from 'react';\n\nconst IconSelectSizeXs = (props: SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path d=\"M6 8.5 10 4H2l4 4.5z\" />\n  </svg>\n);\nexport default IconSelectSizeXs;\n", "import { createIcon } from '../Icon';\nimport IconSelectSizeM from './IconSelect_size_m';\nimport IconSelectSizeS from './IconSelect_size_s';\nimport IconSelectSizeXs from './IconSelect_size_xs';\n\nexport const IconSelect = createIcon({\n  l: IconSelectSizeM,\n  m: IconSelectSizeM,\n  s: IconSelectSizeS,\n  xs: IconSelectSizeXs,\n  name: 'IconSelect',\n  renderType: { l: 'use', m: 'use', s: 'use', xs: 'use' },\n  color: 'mono',\n});\n", "import { useEffect, useRef } from 'react';\n\nexport const useMutableRef = <T>(value: T) => {\n  const ref = useRef(value);\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref;\n};\n", "import { RefObject, useEffect } from 'react';\n\nimport { useMutableRef } from '../useMutableRef/useMutableRef';\n\nexport type ClickOutsideHandler = (event: MouseEvent) => void;\n\ntype UseClickOutsideProps = {\n  isActive?: boolean;\n  ignoreClicksInsideRefs?: ReadonlyArray<RefObject<HTMLElement>>;\n  handler?: ClickOutsideHandler;\n};\n\nexport function useClickOutside({\n  isActive,\n  ignoreClicksInsideRefs,\n  handler,\n}: UseClickOutsideProps): void {\n  // Аргументы вынесены в рефки за тем, чтобы не пересоздавать подписку `mousedown` при кажом чихе.\n  // Бывают кейсы когда на странице несколко `useClickOutside` и один вызывает рендер,\n  // А второй не успевает отрабатывать а просто пересоздается\n  // С такой реализацией пересоздание только при удалении из дома, а аргументы всегда актуалны.\n\n  const handlerRef = useMutableRef(handler);\n  const ignoreClicksInsideRefsRef = useMutableRef(ignoreClicksInsideRefs);\n  const isActiveRef = useMutableRef(isActive);\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      if (!isActiveRef.current) {\n        return;\n      }\n\n      const target = event.target as Node;\n\n      const shouldCallHandler = ignoreClicksInsideRefsRef.current?.every(\n        (ref) => !ref.current?.contains(target),\n      );\n\n      shouldCallHandler && handlerRef.current?.(event);\n    };\n\n    document.addEventListener('mousedown', handleClick);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  }, []);\n}\n", "import './MixSpace.css';\n\nimport { cn } from '##/utils/bem';\n\nexport type Space =\n  | 0\n  | 'auto'\n  | 'm'\n  | '3xs'\n  | '2xs'\n  | 'xs'\n  | 's'\n  | 'l'\n  | 'xl'\n  | '2xl'\n  | '3xl'\n  | '4xl'\n  | '5xl'\n  | '6xl';\n\nexport type MixSpaceProps = {\n  p?: Space;\n  m?: Space;\n  pV?: Space;\n  pH?: Space;\n  mV?: Space;\n  mH?: Space;\n  mT?: Space;\n  mL?: Space;\n  mR?: Space;\n  mB?: Space;\n  pT?: Space;\n  pL?: Space;\n  pR?: Space;\n  pB?: Space;\n};\n\ntype CnMixSpace = (props: MixSpaceProps) => string;\n\nconst cnSpace = cn('MixSpace');\n\nexport const cnMixSpace: CnMixSpace = ({\n  p,\n  m,\n  pV,\n  pH,\n  mV,\n  mH,\n  mT,\n  mL,\n  mR,\n  mB,\n  pT,\n  pL,\n  pR,\n  pB,\n}) =>\n  cnSpace({\n    pT: pT || pV || p,\n    pL: pL || pH || p,\n    pR: pR || pH || p,\n    pB: pB || pV || p,\n    mT: mT || mV || m,\n    mL: mL || mH || m,\n    mR: mR || mH || m,\n    mB: mB || mV || m,\n  });\n", "import './Popover.css';\n\nimport React, { forwardRef, useEffect, useLayoutEffect, useMemo } from 'react';\n\nimport {\n  PortalWithTheme,\n  usePortalContext,\n} from '##/components/PortalWithTheme';\nimport { useTheme } from '##/components/Theme/Theme';\nimport { ClickOutsideHandler, useClickOutside } from '##/hooks/useClickOutside';\nimport { useComponentSize } from '##/hooks/useComponentSize';\nimport { useForkRef } from '##/hooks/useForkRef';\nimport { cn } from '##/utils/bem';\nimport { isRenderProp } from '##/utils/isRenderProp';\nimport { isNumber, isString } from '##/utils/type-guards';\nimport { PropsWithJsxAttributes } from '##/utils/types/PropsWithJsxAttributes';\n\nimport { getComputedPositionAndDirection } from './helpers';\nimport { usePopoverReposition } from './usePopoverReposition';\n\n/**\n * Стороны упорядочены по приоритету:\n * Используется первая сторона, в которую смог вписаться поповер.\n */\nexport const directionsStartCenter = [\n  'downCenter',\n  'upCenter',\n\n  'downRight',\n  'downLeft',\n  'upRight',\n  'upLeft',\n\n  'leftUp',\n  'leftCenter',\n  'leftDown',\n\n  'rightUp',\n  'rightCenter',\n  'rightDown',\n] as const;\n\nexport const directionsStartEdge = [\n  'downStartLeft',\n  'upStartLeft',\n\n  'downStartRight',\n  'upStartRight',\n\n  'leftStartUp',\n  'leftStartDown',\n\n  'rightStartUp',\n  'rightStartDown',\n] as const;\n\nexport const popoverPropOffset = [\n  '3xs',\n  '2xs',\n  'xs',\n  's',\n  'm',\n  'l',\n  'xl',\n  '2xl',\n  '3xl',\n  '4xl',\n  '5xl',\n  '6xl',\n] as const;\nexport type PopoverPropOffset = typeof popoverPropOffset[number] | number;\n\nexport const directions = [...directionsStartCenter, ...directionsStartEdge];\n\nexport type Direction = typeof directions[number];\n\nexport type Position = { x: number; y: number } | undefined;\n\nexport type PositioningProps =\n  | {\n      anchorRef: React.RefObject<HTMLElement>;\n      equalAnchorWidth?: boolean;\n      position?: never;\n    }\n  | {\n      anchorRef?: never;\n      equalAnchorWidth?: never;\n      position: Position;\n    };\n\ntype ChildrenRenderProp = (direction: Direction) => React.ReactNode;\n\nexport type Props = PropsWithJsxAttributes<\n  {\n    direction?: Direction;\n    spareDirection?: Direction;\n    offset?: PopoverPropOffset;\n    arrowOffset?: number;\n    possibleDirections?: readonly Direction[];\n    isInteractive?: boolean;\n    children: React.ReactNode | ChildrenRenderProp;\n    onClickOutside?: ClickOutsideHandler;\n    onSetDirection?: (direction: Direction) => void;\n  } & PositioningProps\n>;\n\nconst getOffset = (\n  ref: React.RefObject<HTMLDivElement>,\n  propOffset: PopoverPropOffset,\n) => {\n  if (isNumber(propOffset)) {\n    return propOffset;\n  }\n\n  if (isString(propOffset) && ref.current) {\n    const cssVar = getComputedStyle(ref.current).getPropertyValue(\n      `--space-${propOffset}`,\n    );\n\n    if (cssVar && /px$/.test(cssVar)) {\n      return Number(cssVar.slice(0, cssVar.length - 2));\n    }\n\n    if (cssVar && /rem$/.test(cssVar)) {\n      const fontSize = parseFloat(\n        getComputedStyle(document.documentElement).fontSize,\n      );\n      const rem = Number(cssVar.slice(0, cssVar.length - 3));\n\n      return fontSize * rem;\n    }\n\n    if (cssVar && /em$/.test(cssVar)) {\n      const fontSize = parseFloat(getComputedStyle(ref.current).fontSize);\n      const em = Number(cssVar.slice(0, cssVar.length - 2));\n\n      return fontSize * em;\n    }\n\n    return 0;\n  }\n\n  return 0;\n};\n\n/**\n * Подписчик на PortalWithThemeProvider\n * получает рефы всех вложенных порталов в модалку\n * для дальнейшего исключения их из useClickOutside\n */\nconst ContextConsumer: React.FC<{\n  onClickOutside?: (event: MouseEvent) => void;\n  ignoreClicksInsideRefs?: ReadonlyArray<React.RefObject<HTMLElement>>;\n  children: React.ReactNode;\n}> = ({ onClickOutside, children, ignoreClicksInsideRefs }) => {\n  const { refs } = usePortalContext();\n\n  useClickOutside({\n    isActive: !!onClickOutside,\n    ignoreClicksInsideRefs: [\n      ...(ignoreClicksInsideRefs || []),\n      ...(refs || []),\n    ],\n    handler: onClickOutside,\n  });\n\n  return children as React.ReactElement;\n};\n\nconst cnPopover = cn('Popover');\n\nexport const Popover = forwardRef<HTMLDivElement, Props>(\n  (props, componentRef) => {\n    const {\n      children,\n      direction: passedDirection = 'upCenter',\n      offset: propOffset = 0,\n      arrowOffset,\n      possibleDirections = directions,\n      isInteractive = true,\n      onClickOutside,\n      spareDirection = 'downStartLeft',\n      style,\n      className,\n      position: passedPosition,\n      anchorRef,\n      equalAnchorWidth,\n      onSetDirection,\n      ...otherProps\n    } = props;\n\n    const ref = React.useRef<HTMLDivElement>(null);\n    const { theme } = useTheme();\n\n    const [anchorClientRect, setAnchorClientRect] = React.useState<\n      DOMRect | undefined\n    >();\n    const { width, height } = useComponentSize(ref);\n    const anchorSize = useComponentSize(anchorRef || { current: null });\n    const previousDirectionRef = React.useRef<Direction | null>(null);\n    const [bannedDirections, setBannedDirections] = React.useState<\n      readonly Direction[]\n    >([]);\n\n    const resetBannedDirections = () => {\n      setBannedDirections((state) => (state.length ? [] : state));\n      previousDirectionRef.current = null;\n    };\n\n    const updateAnchorClientRect = () =>\n      setAnchorClientRect(anchorRef?.current?.getBoundingClientRect());\n\n    const offset = useMemo(\n      () => getOffset(ref, propOffset),\n      [propOffset, Boolean(ref.current)],\n    );\n\n    const { position, direction } = getComputedPositionAndDirection({\n      contentSize: { width, height },\n      viewportSize: {\n        // Размер вьюпорта без скроллбаров\n        width: document.documentElement.clientWidth,\n        height: document.documentElement.clientHeight,\n      },\n      arrowOffset,\n      offset,\n      direction: passedDirection,\n      possibleDirections,\n      bannedDirections,\n      position: anchorClientRect\n        ? { x: anchorClientRect.left, y: anchorClientRect.top }\n        : passedPosition,\n      anchorSize,\n      spareDirection,\n    });\n\n    useEffect(() => onSetDirection?.(direction), [direction]);\n\n    useEffect(updateAnchorClientRect, [anchorSize]);\n\n    usePopoverReposition({\n      isActive: true,\n      scrollAnchorRef: anchorRef || { current: null },\n      onRequestReposition: () => {\n        resetBannedDirections();\n        updateAnchorClientRect();\n      },\n    });\n\n    /**\n     * Может возникнуть ситуация, когда перерасчет поповера всегда будет выдавать 2 направления\n     * и бесконечно зацикливать себя. Для избежания таких кейсов мы запоминаем стороны,\n     * которые не подошли, чтобы не возвращаться к ним и предотвратить бесконечный ререндер.\n     * См. PopoverBannedPositionsStory\n     */\n\n    useLayoutEffect(() => {\n      if (previousDirectionRef.current !== direction) {\n        if (\n          previousDirectionRef.current &&\n          !bannedDirections.includes(previousDirectionRef.current) &&\n          !bannedDirections.includes(direction) &&\n          direction !== spareDirection\n        ) {\n          setBannedDirections((state) =>\n            previousDirectionRef.current\n              ? [...state, previousDirectionRef.current]\n              : state,\n          );\n        }\n        previousDirectionRef.current = direction;\n      }\n    }, [direction]);\n\n    // Сбрасываем при любом изменении пропсов, чтобы заново начать перебор направлений\n    // Главное не сбрасывать при изменении размеров поповера, т.к. именно оно может вызвать бесконечный перебор\n\n    useLayoutEffect(resetBannedDirections, [props]);\n\n    const notVisible = !position || !height || !width;\n\n    return (\n      <PortalWithTheme\n        {...otherProps}\n        preset={theme}\n        className={cnPopover({ direction, notVisible }, [className])}\n        container={window.document.body}\n        ref={useForkRef([ref, componentRef])}\n        style={{\n          ...style,\n          ...(notVisible\n            ? {}\n            : {\n                ['--popover-top' as string]: `${\n                  (position?.y || 0) + window.scrollY\n                }px`,\n                ['--popover-left' as string]: `${\n                  (position?.x || 0) + window.scrollX\n                }px`,\n                [`--popover-width` as string]: equalAnchorWidth\n                  ? `${anchorSize.width}px`\n                  : undefined,\n                [`--popover-pointer-events` as string]: isInteractive\n                  ? undefined\n                  : 'none',\n                [`--popover-visibility` as string]: position\n                  ? undefined\n                  : 'hidden',\n              }),\n        }}\n      >\n        <ContextConsumer\n          onClickOutside={onClickOutside}\n          ignoreClicksInsideRefs={[ref, anchorRef || { current: null }]}\n        >\n          {isRenderProp(children) ? children(direction) : children}\n        </ContextConsumer>\n      </PortalWithTheme>\n    );\n  },\n);\n", "import React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { useForkRef } from '../../hooks/useForkRef/useForkRef';\nimport { Theme, ThemeProps } from '../Theme/Theme';\nimport {\n  PortalWithThemeProvider,\n  usePortalContext,\n} from './PortalWithThemeContext/PortalWithThemeContext';\n\nexport { usePortalContext };\n\ntype Props = {\n  container?: Element;\n} & ThemeProps;\n\nconst getZIndex = (contextZindex?: number, propZindex?: number | string) => {\n  if (typeof propZindex === 'number') {\n    return propZindex;\n  }\n\n  if (contextZindex) {\n    return contextZindex + 1;\n  }\n\n  return undefined;\n};\n\nexport const PortalWithTheme = React.forwardRef<HTMLDivElement, Props>(\n  (\n    { children, container = window.document.body, style: styleProp, ...rest },\n    ref,\n  ) => {\n    const { addRefs, zIndex: zIndexContext } = usePortalContext();\n\n    const themeRef = useRef(null);\n\n    const zIndex = getZIndex(zIndexContext, styleProp?.zIndex);\n\n    const style = {\n      ...styleProp,\n      zIndex,\n    };\n\n    useEffect(() => {\n      addRefs && addRefs([themeRef]);\n    }, [themeRef]);\n\n    return ReactDOM.createPortal(\n      <PortalWithThemeProvider zIndex={zIndex}>\n        <Theme ref={useForkRef([themeRef, ref])} style={style} {...rest}>\n          {children}\n        </Theme>\n      </PortalWithThemeProvider>,\n      container,\n    );\n  },\n);\n", "import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst Context = createContext<{\n  refs: React.RefObject<HTMLElement>[];\n  addRefs?: (ref: React.RefObject<HTMLElement>[]) => void;\n  zIndex?: number;\n}>({\n  refs: [],\n  zIndex: undefined,\n});\n\nexport function usePortalContext() {\n  return useContext(Context);\n}\n/**\n * PortalWithThemeProvider\n * нужен для того чтобы получать рефы дочерних порталов и прокидывать их в родительские порталы\n * Это нужно чтобы в компонетах использовать usePortalContext()\n * и получать рефы всех вложенных порталов в компонент, чтобы без ошибочно реализовать onOutsideClick.\n * Проблема заклбчалась в том что при нажатии на любой вложенный портал,\n * компонент думал ччто клик произашел вне компонента и срабатывал onOutsideClick.\n * Сечас когда мы знаем рефы всех вложенных порталов мы можем игнорировать события кликов на вложенных порталах\n */\nexport const PortalWithThemeProvider: React.FC<{\n  zIndex?: number;\n  children?: React.ReactNode;\n}> = (props) => {\n  const [refs, setRefs] = useState<React.RefObject<HTMLElement>[]>([]);\n  const { addRefs: contextAddRefs } = usePortalContext();\n\n  /**\n   * фукция для добавления рефов дочерних порталов\n   * @param {React.RefObject<HTMLElement>[]} addRef массив ссылок\n   */\n  const addRefs = (addRef: React.RefObject<HTMLElement>[]) => {\n    if (addRef.length > 0) {\n      const newRefs = [\n        ...refs.filter((item) => item.current),\n        ...addRef.filter((addItem) => {\n          if (!addItem.current) {\n            return false;\n          }\n          return !refs.find((item) => item.current === addItem.current);\n        }),\n      ];\n      setRefs(newRefs);\n    }\n  };\n\n  /**\n   * при изменении дочерних рефов необходимо добавить их в родительские порталы\n   */\n  useEffect(() => {\n    contextAddRefs && contextAddRefs(refs);\n  }, [refs]);\n\n  useEffect(() => () => setRefs([]), []);\n\n  return (\n    // eslint-disable-next-line react/jsx-no-constructed-context-values\n    <Context.Provider value={{ refs, addRefs, zIndex: props.zIndex }}>\n      {props.children}\n    </Context.Provider>\n  );\n};\n", "export const isRenderProp = <PROPS>(\n  children: React.ReactNode | PROPS,\n): children is PROPS => typeof children === 'function';\n", "import { Direction, Position } from './Popover';\n\ntype Size = Pick<DOMRect, 'width' | 'height'>;\n\ntype PositionsByDirection = Record<Direction, NonNullable<Position>>;\n\nconst getPosition = (x: number, y: number): NonNullable<Position> => ({\n  x: Math.round(x),\n  y: Math.round(y),\n});\n\nexport const getPositionsByDirection = ({\n  contentSize,\n  anchorSize,\n  position: { x, y },\n  arrowOffset = 0,\n  offset = 0,\n}: {\n  contentSize: Size;\n  anchorSize: Size;\n  position: NonNullable<Position>;\n  arrowOffset?: number;\n  offset?: number;\n}): PositionsByDirection => {\n  const { width: contentWidth, height: contentHeight } = contentSize;\n  const { width: anchorWidth, height: anchorHeight } = anchorSize;\n  const anchorCenter = {\n    x: x + anchorWidth / 2,\n    y: y + anchorHeight / 2,\n  };\n\n  const xForRightDirections = x + anchorWidth + offset;\n  const xForLeftDirections = x - contentWidth - offset;\n  const xForVerticalDirections = {\n    right: anchorCenter.x - arrowOffset,\n    center: anchorCenter.x - contentWidth / 2,\n    left: anchorCenter.x - contentWidth + arrowOffset,\n  };\n\n  const yForDownDirections = y + anchorHeight + offset;\n  const yForUpDirections = y - contentHeight - offset;\n  const yForHorizontalDirections = {\n    up: anchorCenter.y - contentHeight + arrowOffset,\n    center: anchorCenter.y - contentHeight / 2,\n    down: anchorCenter.y - arrowOffset,\n  };\n\n  const xForStartLeftDirections = x;\n  const xForStartRightDirections = x - contentWidth + anchorWidth;\n\n  const yForStartUpDirections = y;\n  const yForStartDownDirections = y - contentHeight + anchorHeight;\n\n  return {\n    upLeft: getPosition(xForVerticalDirections.left, yForUpDirections),\n    upCenter: getPosition(xForVerticalDirections.center, yForUpDirections),\n    upRight: getPosition(xForVerticalDirections.right, yForUpDirections),\n\n    downLeft: getPosition(xForVerticalDirections.left, yForDownDirections),\n    downCenter: getPosition(xForVerticalDirections.center, yForDownDirections),\n    downRight: getPosition(xForVerticalDirections.right, yForDownDirections),\n\n    rightUp: getPosition(xForRightDirections, yForHorizontalDirections.up),\n    rightCenter: getPosition(\n      xForRightDirections,\n      yForHorizontalDirections.center,\n    ),\n    rightDown: getPosition(xForRightDirections, yForHorizontalDirections.down),\n\n    leftUp: getPosition(xForLeftDirections, yForHorizontalDirections.up),\n    leftCenter: getPosition(\n      xForLeftDirections,\n      yForHorizontalDirections.center,\n    ),\n    leftDown: getPosition(xForLeftDirections, yForHorizontalDirections.down),\n\n    downStartLeft: getPosition(xForStartLeftDirections, yForDownDirections),\n    downStartRight: getPosition(xForStartRightDirections, yForDownDirections),\n\n    upStartLeft: getPosition(xForStartLeftDirections, yForUpDirections),\n    upStartRight: getPosition(xForStartRightDirections, yForUpDirections),\n\n    leftStartUp: getPosition(xForLeftDirections, yForStartUpDirections),\n    leftStartDown: getPosition(xForLeftDirections, yForStartDownDirections),\n\n    rightStartUp: getPosition(xForRightDirections, yForStartUpDirections),\n    rightStartDown: getPosition(xForRightDirections, yForStartDownDirections),\n  };\n};\n\ntype ComputedPositionAndDirectionParams = {\n  // Координата точки, к которой крепится поповер. Для якоря — координата левой верхней точки якоря\n  position: Position;\n  contentSize: Size;\n  viewportSize: Size;\n  anchorSize?: Size;\n  offset?: number;\n  arrowOffset?: number;\n  direction: Direction;\n  spareDirection: Direction;\n  possibleDirections: readonly Direction[];\n  bannedDirections: readonly Direction[];\n};\n\nexport const getComputedPositionAndDirection = ({\n  position: initialPosition,\n  contentSize,\n  viewportSize,\n  anchorSize = { width: 0, height: 0 },\n  arrowOffset,\n  direction: initialDirection,\n  possibleDirections,\n  bannedDirections,\n  spareDirection,\n  offset = 0,\n}: ComputedPositionAndDirectionParams): {\n  direction: Direction;\n  position: Position;\n} => {\n  if (!initialPosition) {\n    return { position: initialPosition, direction: initialDirection };\n  }\n\n  const positionsByDirection = getPositionsByDirection({\n    contentSize,\n    anchorSize,\n    position: initialPosition,\n    arrowOffset,\n    offset,\n  });\n\n  const direction =\n    [initialDirection, ...possibleDirections]\n      .filter((dir) => !bannedDirections.includes(dir))\n      .find((dir) => {\n        const pos = positionsByDirection[dir];\n        const { width, height } = contentSize;\n\n        const isFittingDown = pos.y + height <= viewportSize.height;\n        const isFittingUp = pos.y >= 0;\n\n        const isFittingLeft = pos.x >= 0;\n        const isFittingRight = pos.x + width <= viewportSize.width;\n\n        return isFittingUp && isFittingDown && isFittingLeft && isFittingRight;\n      }) || spareDirection;\n\n  return {\n    direction,\n    position: positionsByDirection[direction],\n  };\n};\n", "import React, { useEffect } from 'react';\n\nimport { useMutableRef } from '../../hooks/useMutableRef/useMutableRef';\n\nconst getAllParents = (element: HTMLElement): readonly Node[] => {\n  const mutableParents: Node[] = [];\n  let currentNode: Node | null = element;\n\n  while (currentNode) {\n    currentNode !== element && mutableParents.push(currentNode);\n    currentNode = currentNode.parentNode;\n  }\n\n  return mutableParents;\n};\n\n/** Запрос репозиции поповера при ресайзе окна и скролле */\nexport const usePopoverReposition = ({\n  isActive,\n  scrollAnchorRef,\n  onRequestReposition,\n}: {\n  isActive: boolean;\n  /** При скролле родителей этого элемента будет запрашиваться репозиция поповера */\n  scrollAnchorRef: React.RefObject<HTMLElement | null>;\n  onRequestReposition: () => void;\n}) => {\n  const onRequestRepositionRef = useMutableRef(onRequestReposition);\n\n  useEffect(() => {\n    const fn = () => onRequestRepositionRef.current();\n    if (isActive) {\n      window.addEventListener('resize', fn);\n\n      const allParents = scrollAnchorRef?.current\n        ? getAllParents(scrollAnchorRef.current)\n        : [];\n      allParents.forEach((parentEl) => parentEl.addEventListener('scroll', fn));\n\n      return () => {\n        window.removeEventListener('resize', fn);\n\n        allParents.forEach((parentEl) =>\n          parentEl.removeEventListener('scroll', fn),\n        );\n      };\n    }\n    return undefined;\n  }, [scrollAnchorRef]);\n};\n"],
  "mappings": "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",
  "names": ["IconSelectSizeM", "props", "React", "IconSelectSizeS", "props", "React", "IconSelectSizeXs", "props", "IconSelect", "createIcon", "l", "IconSelectSizeM", "m", "s", "IconSelectSizeS", "xs", "IconSelectSizeXs", "name", "renderType", "color", "useMutableRef", "value", "ref", "useRef", "useEffect", "current", "import_react", "useClickOutside", "isActive", "ignoreClicksInsideRefs", "handler", "handlerRef", "useMutableRef", "ignoreClicksInsideRefsRef", "isActiveRef", "useEffect", "handleClick", "event", "b", "c", "current", "target", "shouldCallHandler", "every", "ref", "contains", "document", "addEventListener", "removeEventListener", "cnSpace", "cn", "cnMixSpace", "p", "m", "pV", "pH", "mV", "mH", "mT", "mL", "mR", "mB", "pT", "pL", "pR", "pB", "import_react", "import_react", "import_react", "Context", "createContext", "refs", "zIndex", "usePortalContext", "useContext", "PortalWithThemeProvider", "props", "useState", "setRefs", "contextAddRefs", "addRefs", "useEffect", "React", "addRef", "length", "newRefs", "filter", "item", "current", "addItem", "find", "children", "getZIndex", "contextZindex", "propZindex", "PortalWithTheme", "React", "forwardRef", "ref", "children", "container", "window", "document", "body", "styleProp", "style", "rest", "usePortalContext", "addRefs", "zIndexContext", "zIndex", "themeRef", "useRef", "useEffect", "ReactDOM", "createPortal", "useForkRef", "isRenderProp", "children", "getPosition", "x", "y", "Math", "round", "getPositionsByDirection", "contentSize", "anchorSize", "position", "arrowOffset", "offset", "contentWidth", "width", "contentHeight", "height", "anchorWidth", "anchorHeight", "anchorCenter", "xForRightDirections", "xForLeftDirections", "xForVerticalDirections", "right", "center", "left", "yForDownDirections", "yForUpDirections", "yForHorizontalDirections", "up", "down", "xForStartLeftDirections", "xForStartRightDirections", "yForStartUpDirections", "yForStartDownDirections", "upLeft", "upCenter", "upRight", "downLeft", "downCenter", "downRight", "rightUp", "rightCenter", "rightDown", "leftUp", "leftCenter", "leftDown", "downStartLeft", "downStartRight", "upStartLeft", "upStartRight", "leftStartUp", "leftStartDown", "rightStartUp", "rightStartDown", "getComputedPositionAndDirection", "initialPosition", "viewportSize", "initialDirection", "direction", "possibleDirections", "bannedDirections", "spareDirection", "positionsByDirection", "filter", "dir", "includes", "find", "pos", "isFittingDown", "isFittingUp", "isFittingLeft", "isFittingRight", "import_react", "getAllParents", "element", "mutableParents", "currentNode", "push", "parentNode", "usePopoverReposition", "isActive", "scrollAnchorRef", "onRequestReposition", "onRequestRepositionRef", "useMutableRef", "useEffect", "fn", "current", "window", "addEventListener", "allParents", "forEach", "parentEl", "removeEventListener", "directionsStartCenter", "directionsStartEdge", "directions", "directionsStartCenter", "directionsStartEdge", "getOffset", "ref", "propOffset", "isNumber", "isString", "current", "cssVar", "getComputedStyle", "getPropertyValue", "test", "slice", "length", "fontSize", "parseFloat", "document", "documentElement", "rem", "em", "ContextConsumer", "onClickOutside", "children", "ignoreClicksInsideRefs", "usePortalContext", "refs", "useClickOutside", "isActive", "handler", "cnPopover", "cn", "Popover", "forwardRef", "props", "componentRef", "direction", "passedDirection", "offset", "arrowOffset", "possibleDirections", "isInteractive", "spareDirection", "style", "className", "passedPosition", "position", "anchorRef", "equalAnchorWidth", "onSetDirection", "otherProps", "_excluded", "React", "useRef", "useTheme", "theme", "useState", "anchorClientRect", "setAnchorClientRect", "useComponentSize", "width", "height", "anchorSize", "previousDirectionRef", "bannedDirections", "setBannedDirections", "resetBannedDirections", "state", "updateAnchorClientRect", "a", "getBoundingClientRect", "useMemo", "getComputedPositionAndDirection", "contentSize", "viewportSize", "clientWidth", "clientHeight", "x", "left", "y", "top", "useEffect", "usePopoverReposition", "scrollAnchorRef", "onRequestReposition", "useLayoutEffect", "includes", "notVisible", "window", "body", "useForkRef", "_objectSpread", "scrollY", "scrollX", "isRenderProp"]
}
