{
  "version": 3,
  "sources": ["../../node_modules/@consta/src/components/FieldCaption/FieldCaption.tsx", "../../node_modules/@consta/src/components/FieldLabel/FieldLabel.tsx"],
  "sourcesContent": ["import React from 'react';\n\nimport { cn } from '../../utils/bem';\nimport { forwardRefWithAs } from '../../utils/types/PropsWithAsAttributes';\nimport { Text } from '../Text/Text';\n\nexport type FieldCaptionPropStatus = 'alert' | 'warning' | 'success';\n\ntype FieldCaptionProps = {\n  status?: FieldCaptionPropStatus;\n};\n\nconst cnFieldCaption = cn('FieldCaption');\n\nexport const FieldCaption = forwardRefWithAs<FieldCaptionProps>(\n  (props, ref) => {\n    const { status, children, className, ...otherProps } = props;\n\n    return (\n      <Text\n        {...otherProps}\n        view={status || 'secondary'}\n        className={cnFieldCaption(null, [className])}\n        ref={ref}\n        size=\"xs\"\n        lineHeight=\"2xs\"\n      >\n        {children}\n      </Text>\n    );\n  },\n);\n", "import './FieldLabel.css';\n\nimport { IconComponent, IconPropSize } from '@consta/icons/Icon';\nimport React from 'react';\n\nimport { cnMixSpace, Space } from '##/mixs/MixSpace';\n\nimport { cn } from '../../utils/bem';\nimport { forwardRefWithAs } from '../../utils/types/PropsWithAsAttributes';\nimport { Text } from '../Text/Text';\n\nexport type FieldLabelPropSize = 'xs' | 's' | 'm' | 'l';\n\ntype FieldLabelProps = {\n  icon?: IconComponent;\n  size?: FieldLabelPropSize;\n  required?: boolean;\n};\n\nconst cnFieldLabel = cn('FieldLabel');\n\nconst iconSizeMap: Record<FieldLabelPropSize, IconPropSize> = {\n  xs: 'xs',\n  s: 's',\n  m: 's',\n  l: 's',\n};\n\nconst iconSpaceMap: Record<FieldLabelPropSize, Space> = {\n  xs: '2xs',\n  s: '2xs',\n  m: '2xs',\n  l: 'xs',\n};\n\nexport const FieldLabel = forwardRefWithAs<FieldLabelProps>((props, ref) => {\n  const {\n    className,\n    required,\n    children,\n    icon: Icon,\n    size = 'm',\n    ...otherProps\n  } = props;\n\n  return (\n    <Text\n      {...otherProps}\n      size={size}\n      view=\"secondary\"\n      lineHeight=\"m\"\n      className={cnFieldLabel(null, [className])}\n      ref={ref}\n    >\n      {Icon && (\n        <Icon\n          className={cnFieldLabel('Icon', [\n            cnMixSpace({ mR: iconSpaceMap[size] }),\n          ])}\n          size={iconSizeMap[size]}\n          view=\"secondary\"\n        />\n      )}\n      {children}\n      {required && <span className={cnFieldLabel('Star')}>*</span>}\n    </Text>\n  );\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA,mBAAkB;;AAYlB,IAAMA,iBAAiBC,GAAG,cAAD;AAElB,IAAMC,eAAeC,iBAC1B,SAACC,GAAOC,GAAQ;AACd,MAAQC,IAA+CF,EAA/CE,QAAQC,IAAuCH,EAAvCG,UAAUC,IAA6BJ,EAA7BI,WAAcC,IAAxC,yBAAuDL,GAAvD,SAAA;AAEA,SACE,aAAAM,QAAA,cAAC,MAAD,OAAA,OAAA,CAAA,GACMD,GADN,EAEE,MAAMH,KAAU,aAChB,WAAWN,eAAe,MAAM,CAACQ,CAAD,CAAP,GACzB,KAAKH,GACL,MAAK,MACL,YAAW,MANb,CAAA,GAQGE,CARH;AAWH,CAhByC;;;ACX5C,IAAAI,gBAAkB;AAHlB,OAAA;;AASA,IAUMC,eAAeC,GAAG,YAAD;AAVvB,IAYMC,cAAwD,EAC5DC,IAAI,MACJC,GAAG,KACHC,GAAG,KACHC,GAAG,IAJyD;AAZ9D,IAmBMC,eAAkD,EACtDJ,IAAI,OACJC,GAAG,OACHC,GAAG,OACHC,GAAG,KAJmD;AAOjD,IAAME,aAAaC,iBAAkC,SAACC,GAAOC,GAAQ;AAC1E,MACEC,IAMEF,EANFE,WACAC,IAKEH,EALFG,UACAC,IAIEJ,EAJFI,UACMC,IAGJL,EAHFM,MAJF,IAOIN,EAFFO,MAAAA,IALF,WAAA,IAKS,MALT,GAMKC,IANL,yBAOIR,GAPJS,UAAA;AASA,SACE,cAAAC,QAAA,cAAC,MAAD,OAAA,OAAA,CAAA,GACMF,GADN,EAEE,MAAMD,GACN,MAAK,aACL,YAAW,KACX,WAAWjB,aAAa,MAAM,CAACY,CAAD,CAAP,GACvB,KAAKD,EANP,CAAA,GAQGI,KACC,cAAAK,QAAA,cAAC,GAAD,EACE,WAAWpB,aAAa,QAAQ,CAC9BqB,WAAW,EAAEC,IAAIf,aAAaU,CAAD,EAAlB,CAAD,CADoB,CAAT,GAGvB,MAAMf,YAAYe,CAAD,GACjB,MAAK,YALP,CAAA,GAQDH,GACAD,KAAY,cAAAO,QAAA,cAAA,QAAA,EAAM,WAAWpB,aAAa,MAAD,EAA7B,GAAA,GAAA,CAlBf;AAqBH,CAhCyC;",
  "names": ["cnFieldCaption", "cn", "FieldCaption", "forwardRefWithAs", "props", "ref", "status", "children", "className", "otherProps", "React", "import_react", "cnFieldLabel", "cn", "iconSizeMap", "xs", "s", "m", "l", "iconSpaceMap", "FieldLabel", "forwardRefWithAs", "props", "ref", "className", "required", "children", "Icon", "icon", "size", "otherProps", "_excluded", "React", "cnMixSpace", "mR"]
}
