{
  "version": 3,
  "sources": ["../../node_modules/@consta/src/components/Text/Text.tsx", "../../node_modules/@consta/src/utils/types/PropsWithAsAttributes.ts"],
  "sourcesContent": ["import './Text.css';\n\nimport React from 'react';\n\nimport { cn } from '../../utils/bem';\nimport { forwardRefWithAs } from '../../utils/types/PropsWithAsAttributes';\n\nexport const textPropAlign = ['left', 'center', 'right'] as const;\nexport type TextPropAlign = typeof textPropAlign[number];\n\nexport const textPropDisplay = ['block', 'inlineBlock', 'inline'] as const;\nexport type TextPropDisplay = typeof textPropDisplay[number];\n\nexport const textPropFont = ['primary', 'mono'] as const;\nexport type TextPropFont = typeof textPropFont[number];\n\nexport const textPropCursor = ['pointer'] as const;\nexport type TextPropCursor = typeof textPropCursor[number];\n\nexport const textPropDecoration = ['underline'] as const;\nexport type TextPropDecoration = typeof textPropDecoration[number];\n\nexport const textPropLineHeight = ['2xs', 'xs', 's', 'm', 'l'] as const;\nexport type TextPropLineHeight = typeof textPropLineHeight[number];\nexport const textPropLineHeightDefault: TextPropLineHeight = 'm';\n\nexport const textPropSize = [\n  'm',\n  '2xs',\n  'xs',\n  's',\n  'l',\n  'xl',\n  '2xl',\n  '3xl',\n  '4xl',\n  '5xl',\n  '6xl',\n] as const;\nexport type TextPropSize = typeof textPropSize[number];\nexport const textPropSizeDefault: TextPropSize = textPropSize[0];\n\nexport const textPropSpacing = ['xs', 's', 'm', 'l'] as const;\nexport type TextPropSpacing = typeof textPropSpacing[number];\n\nexport const textPropType = ['blockquote', 'p', 'h3', 'h2', 'h1'] as const;\nexport type TextPropType = typeof textPropType[number];\n\nexport const textPropView = [\n  'primary',\n  'secondary',\n  'brand',\n  'ghost',\n  'link',\n  'linkMinor',\n  'system',\n  'normal',\n  'success',\n  'warning',\n  'alert',\n  'caution',\n  'critical',\n] as const;\nexport type TextPropView = typeof textPropView[number];\nexport const textPropViewDefault: TextPropView = textPropView[0];\n\nexport const textPropWeight = [\n  'thin',\n  'light',\n  'regular',\n  'medium',\n  'semibold',\n  'bold',\n  'black',\n] as const;\nexport type TextPropWeight = typeof textPropWeight[number];\n\nexport const textPropFontStyle = ['italic'] as const;\nexport type TextPropFontStyle = typeof textPropFontStyle[number];\n\nexport const textPropTransform = ['uppercase'] as const;\nexport type TextPropTransform = typeof textPropTransform[number];\n\nexport const textPropWidth = ['default'] as const;\nexport type TextPropWidth = typeof textPropWidth[number];\n\nexport type TextProps = {\n  align?: TextPropAlign;\n  cursor?: TextPropCursor;\n  decoration?: TextPropDecoration;\n  display?: TextPropDisplay;\n  font?: TextPropFont;\n  lineHeight?: TextPropLineHeight;\n  size?: TextPropSize;\n  spacing?: TextPropSpacing;\n  fontStyle?: TextPropFontStyle;\n  transform?: TextPropTransform;\n  type?: TextPropType;\n  view?: TextPropView;\n  weight?: TextPropWeight;\n  width?: TextPropWidth;\n  truncate?: boolean;\n};\n\nexport const cnText = cn('Text');\n\nexport const Text = forwardRefWithAs<TextProps>((props, ref) => {\n  const {\n    as = 'div',\n    align,\n    cursor,\n    decoration,\n    display,\n    font,\n    lineHeight = textPropLineHeightDefault,\n    size = textPropSizeDefault,\n    spacing,\n    fontStyle,\n    transform,\n    type,\n    view = textPropViewDefault,\n    weight,\n    width,\n    className,\n    children,\n    truncate = false,\n    ...otherProps\n  } = props;\n\n  const Tag = as as string;\n\n  return (\n    <Tag\n      {...otherProps}\n      className={cnText(\n        {\n          align,\n          cursor,\n          decoration,\n          display,\n          font,\n          lineHeight,\n          size,\n          spacing,\n          fontStyle,\n          transform,\n          type,\n          view,\n          weight,\n          width,\n          truncate,\n        },\n        [className],\n      )}\n      ref={ref}\n    >\n      {children}\n    </Tag>\n  );\n});\n", "import React from 'react';\n\nexport type PropsWithAsAttributes<\n  Props,\n  As extends keyof JSX.IntrinsicElements,\n> = Props & {\n  as?: As;\n} & Omit<JSX.IntrinsicElements[As], keyof Props>;\n\nexport type ComponentWithAs<\n  Props,\n  DefaultTag extends keyof JSX.IntrinsicElements = 'div',\n> = <As extends keyof JSX.IntrinsicElements = DefaultTag>(\n  props: PropsWithAsAttributes<Props, As> & React.RefAttributes<Element>,\n) => React.ReactElement | null;\n\ntype ForwardRefWithAs<Props> = <As extends keyof JSX.IntrinsicElements>(\n  props: PropsWithAsAttributes<Props, As>,\n  ref: React.Ref<HTMLElement>,\n) => React.ReactElement | null;\n\nexport function forwardRefWithAs<\n  Props,\n  As extends keyof JSX.IntrinsicElements = 'div',\n>(render: ForwardRefWithAs<Props>) {\n  return React.forwardRef<HTMLElement, PropsWithAsAttributes<Props, As>>(\n    render,\n  ) as unknown as ComponentWithAs<Props, As>;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAEA,IAAAA,gBAAkB;AAFlB,OAAA;;;ACAA,mBAAkB;AAqBX,SAASC,iBAGdC,GAAiC;AACjC,SAAOC,aAAAA,QAAMC,WACXF,CADK;AAGR;;;;ADJM,IAAMG,4BAAgD;AAEtD,IAAMC,eAAe,CAC1B,KACA,OACA,MACA,KACA,KACA,MACA,OACA,OACA,OACA,OACA,KAX0B;AAcrB,IAAMC,sBAAoCD,aAAa,CAAD;AAQtD,IAAME,eAAe,CAC1B,WACA,aACA,SACA,SACA,QACA,aACA,UACA,UACA,WACA,WACA,SACA,WACA,UAb0B;AAgBrB,IAAMC,sBAAoCD,aAAa,CAAD;AAwCtD,IAAME,SAASC,GAAG,MAAD;AAEjB,IAAMC,OAAOC,iBAA4B,SAACC,GAAOC,GAAQ;AAAA,MAAA,IAqB1DD,EAnBFE,IAAAA,IAF4D,WAAA,IAEvD,QAFuD,GAG5DC,IAkBEH,EAlBFG,OACAC,IAiBEJ,EAjBFI,QACAC,IAgBEL,EAhBFK,YACAC,IAeEN,EAfFM,SACAC,IAcEP,EAdFO,MAP4D,IAqB1DP,EAbFQ,YAAAA,IAR4D,WAAA,IAQ/CC,4BAR+C,GAAA,IAqB1DT,EAZFU,MAAAA,IAT4D,WAAA,IASrDC,sBATqD,GAU5DC,IAWEZ,EAXFY,SACAC,IAUEb,EAVFa,WACAC,IASEd,EATFc,WACAC,IAQEf,EARFe,MAb4D,IAqB1Df,EAPFgB,MAAAA,IAd4D,WAAA,IAcrDC,sBAdqD,GAe5DC,IAMElB,EANFkB,QACAC,IAKEnB,EALFmB,OACAC,IAIEpB,EAJFoB,WACAC,IAGErB,EAHFqB,UAlB4D,IAqB1DrB,EAFFsB,UACGC,IApByD,yBAqB1DvB,GArB0D,SAAA;AAyB9D,SACE,cAAAwB,QAAA,cAHUtB,GAGV,OAAA,OAAA,CAAA,GACMqB,GADN,EAEE,WAAW3B,OACT,EACEO,OAAAA,GACAC,QAAAA,GACAC,YAAAA,GACAC,SAAAA,GACAC,MAAAA,GACAC,YAAAA,GACAE,MAAAA,GACAE,SAAAA,GACAC,WAAAA,GACAC,WAAAA,GACAC,MAAAA,GACAC,MAAAA,GACAE,QAAAA,GACAC,OAAAA,GACAG,UAAQ,WAAA,KAAA,EAfV,GAiBA,CAACF,CAAD,CAlBe,GAoBjB,KAAKnB,EAtBP,CAAA,GAwBGoB,CAxBH;AA2BH,CArDmC;",
  "names": ["import_react", "forwardRefWithAs", "render", "React", "forwardRef", "textPropLineHeightDefault", "textPropSize", "textPropSizeDefault", "textPropView", "textPropViewDefault", "cnText", "cn", "Text", "forwardRefWithAs", "props", "ref", "as", "align", "cursor", "decoration", "display", "font", "lineHeight", "textPropLineHeightDefault", "size", "textPropSizeDefault", "spacing", "fontStyle", "transform", "type", "view", "textPropViewDefault", "weight", "width", "className", "children", "truncate", "otherProps", "React"]
}
