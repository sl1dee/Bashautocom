{
  "version": 3,
  "sources": ["../../node_modules/@consta/src/components/CheckboxGroup/CheckboxGroup.tsx", "../../node_modules/@consta/src/components/CheckboxGroup/helper.ts", "../../node_modules/@consta/src/components/CheckboxGroup/types.ts"],
  "sourcesContent": ["import './CheckboxGroup.css';\n\nimport React, { forwardRef } from 'react';\n\nimport { useChoiceGroup } from '../../hooks/useChoiceGroup/useChoiceGroup';\nimport { cn } from '../../utils/bem';\nimport { Checkbox } from '../Checkbox/Checkbox';\nimport { withDefaultGetters } from './helper';\nimport {\n  CheckboxGroupComponent,\n  checkboxGroupDefaultDirection,\n  checkboxGroupDefaultSize,\n  checkboxGroupDefaultView,\n  CheckboxGroupProps,\n} from './types';\n\nexport const cnCheckboxGroup = cn('CheckboxGroup');\n\nconst CheckboxGroupRender = (\n  props: CheckboxGroupProps,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const {\n    value = null,\n    items,\n    getItemKey,\n    getItemLabel,\n    getItemDisabled,\n    onChange,\n    name,\n    direction = checkboxGroupDefaultDirection,\n    size = checkboxGroupDefaultSize,\n    view = checkboxGroupDefaultView,\n    disabled = false,\n    className,\n    ...otherProps\n  } = withDefaultGetters(props);\n\n  const { getOnChange, getChecked } = useChoiceGroup({\n    value,\n    getKey: (item) => getItemKey(item) ?? getItemLabel(item),\n    callBack: onChange,\n    multiple: true,\n  });\n\n  return (\n    <div\n      {...otherProps}\n      ref={ref}\n      className={cnCheckboxGroup({ direction, size, view }, [className])}\n    >\n      {items.map((item) => (\n        <Checkbox\n          key={getItemKey(item) ?? getItemLabel(item)}\n          label={getItemLabel(item)}\n          size={size}\n          view={view}\n          name={name}\n          disabled={disabled || getItemDisabled?.(item)}\n          checked={getChecked(item)}\n          onChange={({ e }) => getOnChange(item)(e)}\n          className={cnCheckboxGroup('Item')}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport const CheckboxGroup = forwardRef(\n  CheckboxGroupRender,\n) as CheckboxGroupComponent;\n\nexport * from './types';\n", "import {\n  CheckboxGroupDefaultItem,\n  CheckboxGroupPropGetItemDisabled,\n  CheckboxGroupPropGetItemKey,\n  CheckboxGroupPropGetItemLabel,\n  CheckboxGroupProps,\n} from './types';\n\nconst defaultGetItemKey: CheckboxGroupPropGetItemKey<\n  CheckboxGroupDefaultItem\n> = (item) => item.key;\nconst defaultGetItemLabel: CheckboxGroupPropGetItemLabel<\n  CheckboxGroupDefaultItem\n> = (item) => item.label;\nconst defaultGetItemDisabled: CheckboxGroupPropGetItemDisabled<\n  CheckboxGroupDefaultItem\n> = (item) => item.disabled;\n\nexport const withDefaultGetters = (props: CheckboxGroupProps) => ({\n  ...props,\n  getItemKey: props.getItemKey || defaultGetItemKey,\n  getItemLabel: props.getItemLabel || defaultGetItemLabel,\n  getItemDisabled: props.getItemDisabled || defaultGetItemDisabled,\n});\n", "import { PropsWithHTMLAttributesAndRef } from '../../utils/types/PropsWithHTMLAttributes';\n\nexport type CheckboxGroupDefaultItem = {\n  key?: string | number;\n  label: string;\n  disabled?: boolean;\n};\n\nexport const checkboxGroupDirections = ['column', 'row'] as const;\nexport type CheckboxGroupDirection = typeof checkboxGroupDirections[number];\nexport const checkboxGroupDefaultDirection: CheckboxGroupDirection =\n  checkboxGroupDirections[0];\n\nexport const checkboxGroupSizes = ['m', 'xs', 's', 'l'] as const;\nexport type CheckboxGroupPropSize = typeof checkboxGroupSizes[number];\nexport const checkboxGroupDefaultSize: CheckboxGroupPropSize =\n  checkboxGroupSizes[0];\n\nexport const checkboxGroupViews = ['primary', 'ghost'] as const;\nexport type CheckboxGroupPropView = typeof checkboxGroupViews[number];\nexport const checkboxGroupDefaultView: CheckboxGroupPropView =\n  checkboxGroupViews[0];\n\nexport type CheckboxGroupPropGetItemKey<ITEM> = (\n  item: ITEM,\n) => string | number | undefined;\nexport type CheckboxGroupPropGetItemLabel<ITEM> = (item: ITEM) => string;\nexport type CheckboxGroupPropGetItemDisabled<ITEM> = (\n  item: ITEM,\n) => boolean | undefined;\n\nexport type CheckboxGroupProps<ITEM = CheckboxGroupDefaultItem> =\n  PropsWithHTMLAttributesAndRef<\n    {\n      value?: ITEM[] | null;\n      items: ITEM[];\n      getItemKey?: CheckboxGroupPropGetItemKey<ITEM>;\n      getItemLabel?: CheckboxGroupPropGetItemLabel<ITEM>;\n      getItemDisabled?: CheckboxGroupPropGetItemDisabled<ITEM>;\n      onChange: (props: {\n        e: React.ChangeEvent<HTMLInputElement>;\n        value: ITEM[] | null;\n      }) => void;\n      name?: string;\n      direction?: CheckboxGroupDirection;\n      size?: CheckboxGroupPropSize;\n      view?: CheckboxGroupPropView;\n      disabled?: boolean;\n      className?: string;\n    },\n    HTMLDivElement\n  > &\n    (ITEM extends { label: CheckboxGroupDefaultItem['label'] }\n      ? {}\n      : {\n          getItemLabel: CheckboxGroupPropGetItemLabel<ITEM>;\n        });\n\nexport type CheckboxGroupComponent = <ITEM = CheckboxGroupDefaultItem>(\n  props: CheckboxGroupProps<ITEM>,\n) => React.ReactElement | null;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAEA,mBAAkC;AAFlC,OAAA;;;;;;;;;;;;;;;;;;;;;;ICQMA,oBAEF,SAACC,GAAD;AAAA,SAAUA,EAAKC;AAAf;IACEC,sBAEF,SAACF,GAAD;AAAA,SAAUA,EAAKG;AAAf;IACEC,yBAEF,SAACJ,GAAD;AAAA,SAAUA,EAAKK;AAAf;AAEG,IAAMC,qBAAqB,SAACC,GAAD;AAAA,SAAA,cAAA,cAAA,CAAA,GAC7BA,CAD6B,GAAA,CAAA,GAAA,EAEhCC,YAAYD,EAAMC,cAAcT,mBAChCU,cAAcF,EAAME,gBAAgBP,qBACpCQ,iBAAiBH,EAAMG,mBAAmBN,uBAJV,CAAA;AAAA;;;ACV3B,IAAMO,0BAA0B,CAAC,UAAU,KAAX;AAEhC,IAAMC,gCACXD,wBAAwB,CAAD;AAElB,IAAME,qBAAqB,CAAC,KAAK,MAAM,KAAK,GAAjB;AAE3B,IAAMC,2BACXD,mBAAmB,CAAD;AAEb,IAAME,qBAAqB,CAAC,WAAW,OAAZ;AAE3B,IAAMC,2BACXD,mBAAmB,CAAD;;;;AFLb,IAAME,kBAAkBC,GAAG,eAAD;AAEjC,IAAMC,sBAAsB,SAC1BC,GACAC,GACG;AAAA,MAAA,IAeCC,mBAAmBF,CAAD,GAfnB,IAAA,EAEDG,OAAAA,IAFC,WAAA,IAEO,OAFP,GAGDC,IAHC,EAGDA,OACAC,IAJC,EAIDA,YACAC,IALC,EAKDA,cACAC,IANC,EAMDA,iBACAC,IAPC,EAODA,UACAC,IARC,EAQDA,MARC,IAAA,EASDC,WAAAA,IATC,WAAA,IASWC,gCATX,GAAA,IAAA,EAUDC,MAAAA,IAVC,WAAA,IAUMC,2BAVN,GAAA,IAAA,EAWDC,MAAAA,IAXC,WAAA,IAWMC,2BAXN,GAAA,IAAA,EAYDC,UACAC,IAbC,EAaDA,WACGC,IAdF,yBAAA,GAAA,SAAA,GAAA,IAiBiCC,eAAe,EACjDhB,OAAAA,GACAiB,QAAQ,SAAA,OAACC,IAAD;AAAA,QAAAC;AAAA,WAAA,UAAAA,KAAUjB,EAAWgB,EAAD,MAApB,WAAAC,KAAAA,KAA8BhB,EAAae,EAAD;EAA1C,GACRE,UAAUf,GACVgB,UAAQ,KAJyC,CAAD,GAA1CC,IAjBL,EAiBKA,aAAaC,IAjBlB,EAiBkBA;AAOrB,SACE,aAAAC,QAAA,cAAA,OAAA,OAAA,OAAA,CAAA,GACMT,GADN,EAEE,KAAKjB,GACL,WAAWJ,gBAAgB,EAAEa,WAAAA,GAAWE,MAAAA,GAAME,MAAAA,EAAnB,GAA2B,CAACG,CAAD,CAA5B,EAH5B,CAAA,GAKGb,EAAMwB,IAAI,SAACP,IAAD;AAAA,QAAAC;AAAA,WACT,aAAAK,QAAA,cAAC,UAAD,EACE,KAAG,UAAAL,KAAEjB,EAAWgB,EAAD,MAAZ,WAAAC,KAAAA,KAAsBhB,EAAae,EAAD,GACrC,OAAOf,EAAae,EAAD,GACnB,MAAMT,GACN,MAAME,GACN,MAAML,GACN,UAAU,WAAA,KAAA,MAAA,SAAYF,KAAZ,WAAYA,IAAZ,SAAYA,EAAkBc,EAAH,IACrC,SAASK,EAAWL,EAAD,GACnB,UAAU,SAAAC,IAAA;AAAA,UAAGO,KAAHP,GAAGO;AAAH,aAAWJ,EAAYJ,EAAD,EAAOQ,EAAlB;IAAX,GACV,WAAWhC,gBAAgB,MAAD,EAT5B,CAAA;EADS,CAAV,CALH;AAoBH;AAEM,IAAMiC,oBAAgBC,yBAC3BhC,mBADqC;",
  "names": ["defaultGetItemKey", "item", "key", "defaultGetItemLabel", "label", "defaultGetItemDisabled", "disabled", "withDefaultGetters", "props", "getItemKey", "getItemLabel", "getItemDisabled", "checkboxGroupDirections", "checkboxGroupDefaultDirection", "checkboxGroupSizes", "checkboxGroupDefaultSize", "checkboxGroupViews", "checkboxGroupDefaultView", "cnCheckboxGroup", "cn", "CheckboxGroupRender", "props", "ref", "withDefaultGetters", "value", "items", "getItemKey", "getItemLabel", "getItemDisabled", "onChange", "name", "direction", "checkboxGroupDefaultDirection", "size", "checkboxGroupDefaultSize", "view", "checkboxGroupDefaultView", "disabled", "className", "otherProps", "useChoiceGroup", "getKey", "item", "b", "callBack", "multiple", "getOnChange", "getChecked", "React", "map", "e", "CheckboxGroup", "forwardRef"]
}
