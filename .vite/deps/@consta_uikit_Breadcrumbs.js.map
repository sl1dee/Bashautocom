{
  "version": 3,
  "sources": ["../../node_modules/@consta/src/components/Breadcrumbs/Breadcrumbs.tsx", "../../node_modules/@consta/src/components/Breadcrumbs/BreadcrumbsFitModeDropdown/BreadcrumbsFitModeDropdown.tsx", "../../node_modules/@consta/src/components/Breadcrumbs/BreadcrumbsMore/BreadcrumbsMore.tsx", "../../node_modules/@consta/src/icons/IconMeatball/IconMeatball_size_m.tsx", "../../node_modules/@consta/src/icons/IconMeatball/IconMeatball_size_s.tsx", "../../node_modules/@consta/src/icons/IconMeatball/IconMeatball_size_xs.tsx", "../../node_modules/@consta/src/icons/IconMeatball/IconMeatball.tsx", "../../node_modules/@consta/src/components/Button/Button.tsx", "../../node_modules/@consta/src/components/ContextMenu/ContextMenu.tsx", "../../node_modules/@consta/src/components/ContextMenu/ContextMenuLevels/ContextMenuLevels.tsx", "../../node_modules/@consta/src/components/ContextMenu/ContextMenuLevel/ContextMenuLevel.tsx", "../../node_modules/@consta/src/icons/IconArrowLeft/IconArrowLeft_size_m.tsx", "../../node_modules/@consta/src/icons/IconArrowLeft/IconArrowLeft_size_s.tsx", "../../node_modules/@consta/src/icons/IconArrowLeft/IconArrowLeft_size_xs.tsx", "../../node_modules/@consta/src/icons/IconArrowLeft/IconArrowLeft.tsx", "../../node_modules/@consta/src/icons/IconArrowRight/IconArrowRight_size_m.tsx", "../../node_modules/@consta/src/icons/IconArrowRight/IconArrowRight_size_s.tsx", "../../node_modules/@consta/src/icons/IconArrowRight/IconArrowRight_size_xs.tsx", "../../node_modules/@consta/src/icons/IconArrowRight/IconArrowRight.tsx", "../../node_modules/@consta/src/components/ContextMenu/ContextMenuLevelWrapper/ContextMenuLevelWrapper.tsx", "../../node_modules/@consta/src/components/ContextMenu/types.ts", "../../node_modules/@consta/src/components/ContextMenu/helpers.ts", "../../node_modules/@consta/src/components/ContextMenu/ContextMenuLevels/useSize.ts", "../../node_modules/@consta/src/components/ContextMenu/ContextMenuWrapper/ContextMenuWrapper.tsx", "../../node_modules/@consta/src/components/Breadcrumbs/BreadcrumbsItem/BreadcrumbsItem.tsx", "../../node_modules/@consta/src/components/Breadcrumbs/helpers.ts", "../../node_modules/@consta/src/components/Breadcrumbs/useElements.ts", "../../node_modules/@consta/src/hooks/useHideElementsInLineCanary/useHideElementsInLineCanary.ts", "../../node_modules/@consta/src/components/Breadcrumbs/BreadcrumbsFitModeScroll/BreadcrumbsFitModeScroll.tsx", "../../node_modules/@consta/src/components/Breadcrumbs/types.ts"],
  "sourcesContent": ["import './Breadcrumbs.css';\n\nimport React, { forwardRef } from 'react';\n\nimport { cn } from '../../utils/bem';\nimport { BreadcrumbsFitModeDropdown } from './BreadcrumbsFitModeDropdown/BreadcrumbsFitModeDropdown';\nimport { BreadcrumbsFitModeScroll } from './BreadcrumbsFitModeScroll/BreadcrumbsFitModeScroll';\nimport { BreadcrumbsItem } from './BreadcrumbsItem/BreadcrumbsItem';\nimport { withDefaultGetters } from './helpers';\nimport {\n  breadcrumbPropFitModeDefault,\n  breadcrumbPropSizeDefault,\n  BreadcrumbsComponent,\n  BreadcrumbsPropOnItemClick,\n  BreadcrumbsProps,\n  RenderItem,\n} from './types';\n\nexport const cnBreadcrumbs = cn('Breadcrumbs');\n\nconst BreadcrumbsRender = (\n  props: BreadcrumbsProps,\n  ref: React.Ref<HTMLUListElement>,\n) => {\n  const {\n    items,\n    getItemHref,\n    getItemLabel,\n    getItemIcon,\n    getItemOnClick,\n    getItemSubMenu,\n    onItemClick,\n    size = breadcrumbPropSizeDefault,\n    onlyIconRoot = false,\n    className,\n    fitMode = breadcrumbPropFitModeDefault,\n    lastItemIsLink,\n    ...otherProps\n  } = withDefaultGetters(props);\n\n  type Item = typeof items[number];\n\n  const shortList = items.length <= 2;\n\n  const renderItem: RenderItem<Item> = (\n    item,\n    index,\n    isFirst,\n    isLast,\n    ref,\n    hidden,\n  ) => {\n    if (item === undefined) {\n      return;\n    }\n\n    const handleClick: BreadcrumbsPropOnItemClick<Item> = ({ e, item }) => {\n      getItemOnClick?.(item)?.(e);\n      onItemClick?.({ e, item });\n    };\n\n    return (\n      <BreadcrumbsItem\n        className={cnBreadcrumbs('Item', { hidden })}\n        item={item}\n        getItemHref={getItemHref}\n        getItemIcon={getItemIcon}\n        getItemLabel={getItemLabel}\n        getItemSubMenu={getItemSubMenu}\n        onItemClick={handleClick}\n        active={lastItemIsLink ? false : isLast}\n        delimiter={!isFirst}\n        onlyIcon={onlyIconRoot && isFirst}\n        key={cnBreadcrumbs('Item', { index })}\n        size={size}\n        ref={ref}\n      />\n    );\n  };\n\n  if (items.length <= 2) {\n    return (\n      <ul\n        {...otherProps}\n        className={cnBreadcrumbs({ shortList }, [className])}\n        ref={ref}\n      >\n        {items.map((item, index) =>\n          renderItem(item, index, index === 0, index === items.length - 1),\n        )}\n      </ul>\n    );\n  }\n\n  if (fitMode === 'scroll') {\n    return (\n      <BreadcrumbsFitModeScroll\n        {...otherProps}\n        className={cnBreadcrumbs(null, [className])}\n        items={items}\n        renderItem={renderItem}\n        ref={ref}\n      />\n    );\n  }\n\n  return (\n    <BreadcrumbsFitModeDropdown\n      {...otherProps}\n      size={size}\n      className={cnBreadcrumbs(null, [className])}\n      items={items}\n      getItemHref={getItemHref}\n      getItemIcon={getItemIcon}\n      getItemLabel={getItemLabel}\n      getItemOnClick={getItemOnClick}\n      getItemSubMenu={getItemSubMenu}\n      onItemClick={onItemClick}\n      ref={ref}\n      renderItem={renderItem}\n    />\n  );\n};\n\nexport const Breadcrumbs = forwardRef(\n  BreadcrumbsRender,\n) as BreadcrumbsComponent;\n\nexport * from './types';\n", "import './BreadcrumbsFitModeDropdown.css';\n\nimport React, { forwardRef } from 'react';\n\nimport { useForkRef } from '../../../hooks/useForkRef/useForkRef';\nimport { cn } from '../../../utils/bem';\nimport { BreadcrumbsMore } from '../BreadcrumbsMore/BreadcrumbsMore';\nimport { BreadcrumbsFitModeDropdownComponent } from '../types';\nimport { useElements } from '../useElements';\n\nexport const cnBreadcrumbsFitModeDropdown = cn('BreadcrumbsFitModeDropdown');\n\nexport const BreadcrumbsFitModeDropdown: BreadcrumbsFitModeDropdownComponent =\n  forwardRef((props, ref) => {\n    const {\n      items,\n      getItemHref,\n      getItemLabel,\n      getItemIcon,\n      getItemOnClick,\n      getItemSubMenu,\n      onItemClick,\n      size,\n      className,\n      renderItem,\n      ...otherProps\n    } = props;\n\n    const {\n      firstItem,\n      lastItem,\n      readyToHideItems,\n      visibleMap,\n      elementsRefs,\n      parentRef,\n      hiddenItems,\n      firstItemRef,\n      lastItemRef,\n      lastWidth,\n      compression,\n    } = useElements(items);\n\n    const rootRef = useForkRef([ref, parentRef]);\n\n    return (\n      <ul\n        className={cnBreadcrumbsFitModeDropdown({ compression }, [className])}\n        ref={rootRef}\n        {...otherProps}\n        style={{ ['--breadcrumbs-item-last-width' as string]: lastWidth }}\n      >\n        {renderItem(firstItem, 'first', true, false, firstItemRef)}\n        <BreadcrumbsMore\n          size={size}\n          key={cnBreadcrumbsFitModeDropdown('More')}\n          getItemHref={getItemHref}\n          getItemIcon={getItemIcon}\n          getItemLabel={getItemLabel}\n          getItemOnClick={getItemOnClick}\n          onItemClick={onItemClick}\n          getItemSubMenu={getItemSubMenu}\n          items={hiddenItems}\n          ref={elementsRefs[0]}\n          className={cnBreadcrumbsFitModeDropdown('Item', {\n            removed: hiddenItems.length <= 0,\n          })}\n        />\n        {readyToHideItems.map((item, index) =>\n          renderItem(\n            item,\n            index,\n            false,\n            false,\n            elementsRefs[index + 1],\n            !visibleMap[index + 1],\n          ),\n        )}\n        {renderItem(lastItem, 'last', false, true, lastItemRef)}\n      </ul>\n    );\n  });\n", "import './BreadcrumbsMore.css';\n\nimport { IconMeatball } from '@consta/icons/IconMeatball';\nimport React, { forwardRef, useEffect, useRef } from 'react';\n\nimport { useFlag } from '../../../hooks/useFlag/useFlag';\nimport { cn } from '../../../utils/bem';\nimport { getByMap } from '../../../utils/getByMap';\nimport { Button } from '../../Button/Button';\nimport { ContextMenu } from '../../ContextMenu/ContextMenu';\nimport { BreadcrumbsItem } from '../BreadcrumbsItem/BreadcrumbsItem';\nimport { iconSizeMap } from '../helpers';\nimport {\n  BreadcrumbsMoreComponent,\n  BreadcrumbsMoreProps,\n  BreadcrumbsPropGetItemHref,\n  BreadcrumbsPropGetItemIcon,\n} from '../types';\n\nconst cnBreadcrumbsMore = cn('BreadcrumbsMore');\n\nexport function getLeftSideBar<ITEM>(\n  iconSize: 'xs' | 'm',\n  getItemIcon?: BreadcrumbsPropGetItemIcon<ITEM>,\n) {\n  return function (item: ITEM) {\n    const Icon = getItemIcon?.(item);\n    if (Icon) {\n      return <Icon size={iconSize} />;\n    }\n    return undefined;\n  };\n}\n\nexport function getItemAs<ITEM>(\n  getItemHref?: BreadcrumbsPropGetItemHref<ITEM>,\n) {\n  return (item: ITEM) => {\n    const href = getItemHref?.(item);\n    return href ? 'a' : 'span';\n  };\n}\n\nexport function getItemAttributes<ITEM>(\n  getItemHref?: BreadcrumbsPropGetItemHref<ITEM>,\n) {\n  return (item: ITEM) => {\n    return getItemHref && { href: getItemHref(item) };\n  };\n}\n\nexport const contextMenuSizeMap = {\n  xs: 's',\n  s: 's',\n  m: 'm',\n  l: 'l',\n} as const;\n\nfunction BreadcrumbsMoreRender<ITEM>(\n  props: BreadcrumbsMoreProps<ITEM>,\n  ref: React.Ref<HTMLLIElement>,\n) {\n  const {\n    size,\n    items,\n    className,\n    style,\n    getItemHref,\n    getItemIcon,\n    getItemLabel,\n    getItemOnClick: getItemOnClickProp,\n    getItemSubMenu,\n    onItemClick: onItemClickProp,\n    ...otherProps\n  } = props;\n\n  const [open, setOpen] = useFlag();\n\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  const iconSize = getByMap(iconSizeMap, size);\n\n  useEffect(setOpen.off, [items]);\n\n  const onItemClick = ({\n    e,\n    item,\n  }: {\n    e: React.MouseEvent<HTMLDivElement>;\n    item: ITEM;\n  }) => {\n    onItemClickProp?.({ e, item });\n    getItemOnClickProp?.(item)?.(e);\n  };\n\n  const getItemOnClick =\n    (element: ITEM) =>\n    ({ e }: { e: React.MouseEvent<HTMLDivElement> }) => {\n      return getItemOnClickProp?.(element)?.(e);\n    };\n\n  return (\n    <BreadcrumbsItem\n      {...otherProps}\n      className={cnBreadcrumbsMore(null, [className])}\n      delimiter\n      size={size}\n      ref={ref}\n      style={{\n        ...style,\n        ['--breadcrumbs-more-font-size' as string]: `var(--size-text-${size})`,\n      }}\n    >\n      <Button\n        className={cnBreadcrumbsMore('Button')}\n        view=\"clear\"\n        type=\"button\"\n        onlyIcon\n        iconLeft={IconMeatball}\n        size={iconSize}\n        ref={buttonRef}\n        onClick={setOpen.toggle}\n      />\n      <ContextMenu\n        items={items}\n        isOpen={open}\n        getItemLabel={getItemLabel}\n        getItemSubMenu={getItemSubMenu}\n        getItemOnClick={getItemOnClick}\n        onItemClick={onItemClick}\n        getItemLeftIcon={getItemIcon}\n        anchorRef={buttonRef}\n        onClickOutside={setOpen.off}\n        getItemAs={getItemAs(getItemHref)}\n        getItemAttributes={getItemAttributes(getItemHref)}\n        direction=\"downCenter\"\n        possibleDirections={[\n          'downCenter',\n          'upCenter',\n          'downStartLeft',\n          'upStartLeft',\n          'downStartRight',\n          'upStartRight',\n        ]}\n        offset=\"xs\"\n        size={contextMenuSizeMap[size]}\n      />\n    </BreadcrumbsItem>\n  );\n}\n\nexport const BreadcrumbsMore = forwardRef(\n  BreadcrumbsMoreRender,\n) as BreadcrumbsMoreComponent;\n", "import * as React from 'react';\nimport { SVGProps } from 'react';\n\nconst IconMeatballSizeM = (props: SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path d=\"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\n  </svg>\n);\nexport default IconMeatballSizeM;\n", "import * as React from 'react';\nimport { SVGProps } from 'react';\n\nconst IconMeatballSizeS = (props: SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path d=\"M3 6.5c-.83 0-1.5.67-1.5 1.5S2.17 9.5 3 9.5 4.5 8.83 4.5 8 3.83 6.5 3 6.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5S7.17 9.5 8 9.5 9.5 8.83 9.5 8 8.83 6.5 8 6.5z\" />\n  </svg>\n);\nexport default IconMeatballSizeS;\n", "import * as React from 'react';\nimport { SVGProps } from 'react';\n\nconst IconMeatballSizeXs = (props: SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path d=\"M10 7a1 1 0 1 1 0-2 1 1 0 0 1 0 2zM6 7a1 1 0 1 1 0-2 1 1 0 0 1 0 2zM1 6a1 1 0 1 0 2 0 1 1 0 0 0-2 0z\" />\n  </svg>\n);\nexport default IconMeatballSizeXs;\n", "import { createIcon } from '../Icon';\nimport IconMeatballSizeM from './IconMeatball_size_m';\nimport IconMeatballSizeS from './IconMeatball_size_s';\nimport IconMeatballSizeXs from './IconMeatball_size_xs';\n\nexport const IconMeatball = createIcon({\n  l: IconMeatballSizeM,\n  m: IconMeatballSizeM,\n  s: IconMeatballSizeS,\n  xs: IconMeatballSizeXs,\n  name: 'IconMeatball',\n  renderType: { l: 'use', m: 'use', s: 'use', xs: 'use' },\n  color: 'mono',\n});\n", "import './Button.css';\n\nimport { IconComponent, IconPropSize } from '@consta/icons/Icon';\nimport React, { useRef } from 'react';\n\nimport { useForkRef } from '../../hooks/useForkRef/useForkRef';\nimport { cnMixFocus } from '../../mixs/MixFocus/MixFocus';\nimport { cn } from '../../utils/bem';\nimport { getByMap } from '../../utils/getByMap';\nimport { forwardRefWithAs } from '../../utils/types/PropsWithAsAttributes';\nimport { usePropsHandler } from '../EventInterceptor/usePropsHandler';\nimport { Loader } from '../Loader/Loader';\n\nexport const buttonPropSize = ['m', 'xs', 's', 'l'] as const;\nexport type ButtonPropSize = typeof buttonPropSize[number];\nexport const buttonPropSizeDefault: ButtonPropSize = buttonPropSize[0];\n\nexport const buttonPropView = [\n  'primary',\n  'clear',\n  'ghost',\n  'secondary',\n] as const;\nexport type ButtonPropView = typeof buttonPropView[number];\nexport const buttonPropViewDefault: ButtonPropView = buttonPropView[0];\n\nexport const buttonPropWidth = ['default', 'full'] as const;\nexport type ButtonPropWidth = typeof buttonPropWidth[number];\nexport const buttonPropWidthDefault: ButtonPropWidth = buttonPropWidth[0];\n\nexport const buttonPropForm = [\n  'default',\n  'brick',\n  'round',\n  'brickRound',\n  'roundBrick',\n  'brickDefault',\n  'defaultBrick',\n] as const;\n\nexport type ButtonPropForm = typeof buttonPropForm[number];\n\ntype GlobalForm =\n  | 'default'\n  | 'brick'\n  | 'round'\n  | 'brickRound'\n  | 'roundBrick'\n  | 'brickDefault'\n  | 'defaultBrick'\n  | 'defaultClear'\n  | 'brickClear'\n  | 'roundClear'\n  | 'clearRound'\n  | 'clearDefault'\n  | 'clearBrick'\n  | 'clearClear';\n\nconst mapStableForm: Record<GlobalForm, ButtonPropForm> = {\n  default: 'default',\n  defaultClear: 'defaultBrick',\n  defaultBrick: 'defaultBrick',\n  brick: 'brick',\n  brickDefault: 'brickDefault',\n  brickClear: 'brick',\n  brickRound: 'brickRound',\n  round: 'round',\n  roundClear: 'roundBrick',\n  roundBrick: 'roundBrick',\n  clearRound: 'brickRound',\n  clearDefault: 'brickDefault',\n  clearBrick: 'brick',\n  clearClear: 'brick',\n};\n\nexport const buttonPropFormDefault = buttonPropForm[0];\n\nexport type Props = {\n  size?: ButtonPropSize;\n  view?: ButtonPropView;\n  width?: ButtonPropWidth;\n  form?: ButtonPropForm;\n  tabIndex?: number;\n  disabled?: boolean;\n  loading?: boolean;\n  label?: string | number;\n  onClick?: React.EventHandler<React.MouseEvent>;\n  iconLeft?: IconComponent;\n  iconRight?: IconComponent;\n  onlyIcon?: boolean;\n  iconSize?: IconPropSize;\n  title?: string;\n  children?: never;\n};\n\nexport const COMPONENT_NAME = 'Button' as const;\nexport const cnButton = cn(COMPONENT_NAME);\n\nconst sizeMap: Record<ButtonPropSize, IconPropSize> = {\n  xs: 'xs',\n  s: 'xs',\n  m: 's',\n  l: 'm',\n};\n\nconst sizeMapOnlyIcon: Record<ButtonPropSize, IconPropSize> = {\n  xs: 'xs',\n  s: 's',\n  m: 'm',\n  l: 'm',\n};\n\nexport const Button = forwardRefWithAs<Props, 'button'>((props, ref) => {\n  const buttonRef = useRef<HTMLButtonElement | null>(null);\n\n  const {\n    size = buttonPropSizeDefault,\n    view = buttonPropViewDefault,\n    width = buttonPropWidthDefault,\n    form = buttonPropFormDefault,\n    iconLeft,\n    iconRight,\n    label,\n    className,\n    onClick,\n    disabled,\n    loading,\n    tabIndex,\n    as = 'button',\n    onlyIcon,\n    iconSize: iconSizeProp,\n    ...otherProps\n  } = usePropsHandler(COMPONENT_NAME, props, buttonRef);\n\n  const Tag = as as string;\n  const IconOnly = (!label || onlyIcon) && (iconLeft || iconRight);\n  const IconLeft = iconLeft;\n  const IconRight = iconRight;\n  const withIcon = !!iconLeft || !!iconRight;\n  const title = props.title || (!!IconOnly && label) || undefined;\n  const iconSize = IconOnly\n    ? getByMap(sizeMapOnlyIcon, size, iconSizeProp)\n    : getByMap(sizeMap, size, iconSizeProp);\n\n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\n    if (!disabled && !loading && onClick) {\n      onClick(e);\n    }\n  };\n\n  return (\n    <Tag\n      {...otherProps}\n      onClick={onClick ? handleClick : undefined}\n      className={cnButton(\n        {\n          size,\n          view,\n          width,\n          form: mapStableForm[form],\n          disabled,\n          loading,\n          withIcon,\n          onlyIcon: !!IconOnly,\n        },\n        [!(disabled || loading) ? cnMixFocus() : undefined, className],\n      )}\n      tabIndex={tabIndex}\n      title={title}\n      ref={useForkRef([ref, buttonRef])}\n    >\n      {IconOnly && <IconOnly className={cnButton('Icon')} size={iconSize} />}\n      {!IconOnly &&\n        ((IconLeft || IconRight) && label ? (\n          <>\n            {IconLeft && (\n              <IconLeft\n                className={cnButton('Icon', { position: 'left' })}\n                size={iconSize}\n              />\n            )}\n            <span className={cnButton('Label')}>{label}</span>\n            {IconRight && (\n              <IconRight\n                className={cnButton('Icon', { position: 'right' })}\n                size={iconSize}\n              />\n            )}\n          </>\n        ) : (\n          label\n        ))}\n      {loading && <Loader className={cnButton('Loader')} size=\"s\" />}\n    </Tag>\n  );\n});\n", "import React, { useState } from 'react';\n\nimport { usePropsHandler } from '##/components/EventInterceptor/usePropsHandler';\nimport { ComponentSize } from '##/hooks/useComponentSize';\nimport { useDebounce } from '##/hooks/useDebounce';\nimport { useFlag } from '##/hooks/useFlag';\nimport { animateTimeout } from '##/mixs/MixPopoverAnimate';\n\nimport { ContextMenuLevels } from './ContextMenuLevels';\nimport { ContextMenuWrapper } from './ContextMenuWrapper';\nimport { ContextMenuComponent, ContextMenuProps } from './types';\n\nexport const COMPONENT_NAME = 'ContextMenu' as const;\n\nconst ContextMenuRender = (\n  props: ContextMenuProps,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const rest = usePropsHandler(COMPONENT_NAME, props, ref);\n\n  const [componentSize, setComponentSize] = useState<ComponentSize>({\n    width: 240,\n    height: 100,\n  });\n\n  const [animationBack, setAnimationBack] = useFlag();\n  const disableAnimationBack = useDebounce(\n    setAnimationBack.off,\n    animateTimeout,\n  );\n\n  return (\n    <ContextMenuWrapper\n      {...rest}\n      animationBack={animationBack}\n      style={{ ...rest?.style, ...componentSize }}\n    >\n      <ContextMenuLevels\n        {...rest}\n        setComponentSize={setComponentSize}\n        ref={ref}\n        enableAnimationBack={setAnimationBack.on}\n        disableAnimationBack={disableAnimationBack}\n      />\n    </ContextMenuWrapper>\n  );\n};\n\nexport const ContextMenu = React.forwardRef(\n  ContextMenuRender,\n) as ContextMenuComponent;\n\nexport * from './types';\n", "import React, { Fragment, useEffect, useState } from 'react';\nimport { Transition, TransitionGroup } from 'react-transition-group';\n\nimport { Direction } from '##/components/Popover';\nimport { useClickOutside } from '##/hooks/useClickOutside';\nimport { useForkRef } from '##/hooks/useForkRef';\nimport { useMutableRef } from '##/hooks/useMutableRef';\nimport { useRefs } from '##/hooks/useRefs';\nimport { animateTimeout } from '##/mixs/MixPopoverAnimate';\n\nimport { clearTimers, ContextMenuLevel } from '../ContextMenuLevel';\nimport { getLevels, withDefaultGetters } from '../helpers';\nimport {\n  AddLevel,\n  ContextMenuItemDefault,\n  ContextMenuLevelsComponent,\n  ContextMenuLevelsProps,\n  contextMenuPropDefaultSubMenuDirection,\n  contextMenuPropSubMenuDirections,\n  Level,\n} from '../types';\nimport { useSize } from './useSize';\n\nconst ContextMenuLevelsRender = (\n  propsComponent: ContextMenuLevelsProps,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const props = withDefaultGetters(propsComponent);\n  const {\n    items,\n    anchorRef,\n    position,\n    direction,\n    possibleDirections,\n    offset,\n    onClickOutside,\n    getItemKey,\n    getItemLabel,\n    getItemSubMenu,\n    style,\n    spareDirection,\n    subMenuDirection:\n      subMenuDirectionProp = contextMenuPropDefaultSubMenuDirection,\n    isMobile,\n    isOpen,\n    setComponentSize,\n    enableAnimationBack,\n    disableAnimationBack,\n    ...otherProps\n  } = props;\n\n  const isOpenRef = useMutableRef(isOpen);\n\n  type Item = typeof items[number];\n\n  const defaultLevels: Level<ContextMenuItemDefault>[] = [\n    {\n      items,\n      anchorRef,\n      position,\n      direction,\n      possibleDirections,\n      offset,\n    },\n  ];\n\n  const [levels, setLevels] = useState<\n    Level<ContextMenuItemDefault & { isParent?: boolean }>[]\n  >(isMobile ? defaultLevels : []);\n  const [subMenuDirection, setSubMenuDirection] =\n    useState<Direction>(subMenuDirectionProp);\n  const [hoveredParenLevel, setHoveredParenLevel] = useState<number>(-1);\n\n  const levelsRefs = useRefs<HTMLDivElement>(levels.length);\n\n  const addLevel: AddLevel<Item> = ({\n    level,\n    items,\n    anchorRef,\n    activeItem,\n    parent,\n  }) => {\n    const newLevels: Level<ContextMenuItemDefault & { isParent?: boolean }>[] =\n      [...levels];\n    const oldDirection =\n      newLevels[level] && newLevels.length - level > 1\n        ? newLevels[level].direction\n        : undefined;\n\n    if (newLevels[level] && newLevels.length - level > 1 && oldDirection) {\n      setSubMenuDirection(oldDirection);\n    }\n\n    newLevels[level - 1].activeItem = activeItem;\n    newLevels.splice(level);\n    newLevels.push({\n      items,\n      anchorRef: isMobile ? props.anchorRef : anchorRef,\n      direction: isMobile ? props.direction : oldDirection || subMenuDirection,\n      possibleDirections: isMobile\n        ? props.possibleDirections\n        : contextMenuPropSubMenuDirections,\n      position: isMobile ? props.position : undefined,\n      offset: isMobile ? props.offset : undefined,\n      parent,\n    });\n\n    isOpenRef.current ? setLevels(newLevels) : setLevels([]);\n  };\n\n  const deleteLevel = (level: number) => {\n    enableAnimationBack();\n    const newLevels = [...levels];\n    newLevels.splice(level);\n    newLevels[level - 1] = { ...newLevels[level - 1], activeItem: undefined };\n    setLevels(newLevels);\n    disableAnimationBack();\n  };\n\n  useClickOutside({\n    isActive: onClickOutside && isOpen,\n    ignoreClicksInsideRefs: [...levelsRefs, anchorRef || { current: null }],\n    handler: onClickOutside,\n  });\n\n  useEffect(() => {\n    clearTimers();\n    setLevels(\n      getLevels({\n        levels,\n        items,\n        getItemKey,\n        getItemSubMenu,\n      }),\n    );\n    return () => clearTimers();\n  }, [items]);\n\n  const firstLevelRef = useForkRef([levelsRefs[0], ref]);\n\n  useEffect(() => {\n    setLevels(defaultLevels);\n  }, [position]);\n\n  useEffect(() => {\n    setLevels(isOpen ? defaultLevels : []);\n  }, [isOpen]);\n\n  useSize(levelsRefs, setComponentSize, isMobile);\n\n  return (\n    <TransitionGroup component={Fragment}>\n      {levels.map((level, index) => {\n        const key = `${index}-${level.parent ? getItemKey(level.parent) : ''}`;\n\n        const last = index !== levels.length - 1;\n\n        if (isMobile && last) {\n          return <Fragment key={index} />;\n        }\n\n        return (\n          <Transition\n            key={key}\n            timeout={animateTimeout}\n            nodeRef={levelsRefs[index]}\n          >\n            {(animate) => (\n              <ContextMenuLevel\n                {...otherProps}\n                {...level}\n                key={`${index}-${level.parent ? getItemKey(level.parent) : ''}`}\n                isMobile={isMobile}\n                isOpen={isOpen}\n                style={{\n                  ...style,\n                  ...{\n                    zIndex:\n                      typeof style?.zIndex === 'number'\n                        ? style.zIndex + 1\n                        : undefined,\n                  },\n                }}\n                levelDepth={index}\n                getItemLabel={getItemLabel}\n                addLevel={addLevel}\n                deleteLevel={deleteLevel}\n                onSetDirection={\n                  index > 0 ? setSubMenuDirection : props.onSetDirection\n                }\n                hoveredParenLevel={hoveredParenLevel}\n                setHoveredParenLevel={setHoveredParenLevel}\n                getItemSubMenu={getItemSubMenu}\n                getItemKey={getItemKey}\n                ref={index === 0 ? firstLevelRef : levelsRefs[index]}\n                spareDirection={index === 0 ? spareDirection : 'rightStartUp'}\n                parent={isMobile ? level.parent : undefined}\n                animate={animate}\n              />\n            )}\n          </Transition>\n        );\n      })}\n    </TransitionGroup>\n  );\n};\n\nexport const ContextMenuLevels = React.forwardRef(\n  ContextMenuLevelsRender,\n) as ContextMenuLevelsComponent;\n", "import './ContextMenuLevel.css';\n\nimport { IconArrowLeft } from '@consta/icons/IconArrowLeft';\nimport { IconArrowRight } from '@consta/icons/IconArrowRight';\nimport React, { forwardRef, useEffect } from 'react';\n\nimport {\n  cnListBox,\n  List,\n  ListDivider,\n  ListItem,\n  mapIconSize,\n  mapVerticalSpase,\n} from '##/components/ListCanary';\nimport { useFlag } from '##/hooks/useFlag/useFlag';\nimport { useRefs } from '##/hooks/useRefs/useRefs';\nimport { cnMixPopoverAnimate } from '##/mixs/MixPopoverAnimate';\nimport { cnMixSpace } from '##/mixs/MixSpace';\nimport { cn } from '##/utils/bem';\n\nimport { ContextMenuLevelWrapper } from '../ContextMenuLevelWrapper';\nimport {\n  contextMenuDefaultSize,\n  ContextMenuItemDefault,\n  ContextMenuLevelComponent,\n  ContextMenuLevelProps,\n} from '../types';\n\nexport const cnContextMenuLevel = cn('ContextMenuLevel');\n\nlet timers: ReturnType<typeof setTimeout>[] = [];\nexport function clearTimers() {\n  for (const timer of timers) {\n    clearTimeout(timer);\n  }\n  timers = [];\n}\n\nconst closeDelay = 300;\n\nconst ContextMenuLevelRender = (\n  props: ContextMenuLevelProps,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const {\n    size = contextMenuDefaultSize,\n    items,\n    groups: groupsProp,\n    className,\n    form = 'default',\n    animate,\n    // Свойства относящиеся к меню\n    levelDepth,\n    activeItem,\n    addLevel,\n    deleteLevel,\n    setHoveredParenLevel,\n    hoveredParenLevel,\n    sortGroup,\n    onItemClick,\n    isOpen,\n    parent,\n    isMobile,\n\n    // Свойства для поповера\n    direction,\n    possibleDirections,\n    offset,\n    onSetDirection,\n    spareDirection,\n    anchorRef,\n    // Геттеры для ITEM\n    getItemLabel,\n    getItemRightSide,\n    getItemLeftSide,\n    getItemSubMenu,\n    getItemStatus,\n    getItemDisabled,\n    getItemKey,\n    getItemOnClick,\n    getItemAs,\n    getItemAttributes,\n    getItemGroupId,\n    getItemLeftIcon,\n    getItemRightIcon,\n    // Геттеры для GROUP\n    getGroupLabel,\n    getGroupId,\n    ...otherProps\n  } = props;\n\n  const [hovered, setHovered] = useFlag(false);\n\n  const getKey = (item: ContextMenuItemDefault) =>\n    (getItemKey(item) || getItemLabel(item)).toString();\n\n  const itemsRefs = useRefs<HTMLDivElement, string[]>(\n    items.map((item) => getKey(item)),\n    [groupsProp],\n  );\n\n  useEffect(() => {\n    if (levelDepth !== 0 && !hovered && hoveredParenLevel < levelDepth) {\n      clearTimeout(timers[levelDepth]);\n      timers[levelDepth] = setTimeout(\n        () => deleteLevel(levelDepth),\n        closeDelay,\n      );\n    }\n    return () => clearTimeout(timers[levelDepth]);\n  }, [hovered, hoveredParenLevel]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      clearTimeout(timers[levelDepth]);\n    }\n  }, [isOpen]);\n\n  const addCurrentLevel = (item: ContextMenuItemDefault) => {\n    const subMenu = getItemSubMenu(item);\n    const disabled = getItemDisabled(item);\n\n    if (Array.isArray(subMenu) && !disabled) {\n      const key = getKey(item);\n      addLevel({\n        level: levelDepth + 1,\n        items: subMenu,\n        anchorRef: itemsRefs[key],\n        activeItem: key,\n        parent: item,\n      });\n      setHoveredParenLevel(levelDepth + 1);\n    } else {\n      setHoveredParenLevel(levelDepth);\n    }\n  };\n\n  const onMouseEnter = isMobile\n    ? undefined\n    : (\n          item: ContextMenuItemDefault,\n        ): JSX.IntrinsicElements['div']['onMouseEnter'] =>\n        (e) => {\n          addCurrentLevel(item);\n          const onMouseEnter = getItemAttributes(item)\n            ?.onMouseEnter as JSX.IntrinsicElements['div']['onMouseEnter'];\n\n          onMouseEnter?.(e);\n        };\n\n  const firstLevel = levelDepth === 0;\n\n  return (\n    <ContextMenuLevelWrapper\n      anchorRef={anchorRef}\n      className={\n        isMobile\n          ? cnContextMenuLevel('Mobile', { animate }, [className])\n          : cnContextMenuLevel('Desktop', { firstLevel }, [\n              cnListBox({ size, form, border: true, shadow: true }),\n              cnMixSpace({\n                pV: mapVerticalSpase[size],\n              }),\n              cnMixPopoverAnimate({ animate }),\n              firstLevel ? className : undefined,\n            ])\n      }\n      possibleDirections={possibleDirections}\n      spareDirection={spareDirection}\n      direction={direction}\n      offset={offset}\n      onSetDirection={onSetDirection}\n      onMouseEnter={setHovered.on}\n      onMouseLeave={setHovered.off}\n      ref={ref}\n      isMobile={isMobile}\n      {...otherProps}\n    >\n      {parent && (\n        <>\n          <ListItem\n            label={getItemLabel(parent)}\n            size={size}\n            leftIcon={IconArrowLeft}\n            onClick={() => deleteLevel(levelDepth)}\n          />\n          <ListDivider size={size} space={{ mV: mapVerticalSpase[size] }} />\n        </>\n      )}\n      <List\n        size={size}\n        items={items}\n        getItemLabel={getItemLabel}\n        onItemClick={(item, { e }) => {\n          isMobile && addCurrentLevel(item);\n          onItemClick?.({\n            item,\n            e: e as React.MouseEvent<HTMLDivElement>,\n          });\n        }}\n        sortGroup={sortGroup ? (a, b) => sortGroup(a.key, b.key) : undefined}\n        getItemOnClick={\n          getItemOnClick\n            ? (item) => (e) =>\n                getItemOnClick(item)?.({\n                  e: e as React.MouseEvent<HTMLDivElement>,\n                  item,\n                })\n            : undefined\n        }\n        getItemAs={getItemAs}\n        getItemAttributes={\n          onMouseEnter\n            ? (item) =>\n                ({\n                  ...getItemAttributes(item),\n                  onMouseEnter: onMouseEnter(item),\n                } as JSX.IntrinsicElements[keyof JSX.IntrinsicElements])\n            : getItemAttributes\n        }\n        getItemGroupKey={getItemGroupId}\n        getItemLeftIcon={getItemLeftIcon}\n        getItemRightIcon={getItemRightIcon}\n        getItemLeftSide={getItemLeftSide}\n        getItemRightSide={(item) => {\n          const side = getItemRightSide(item);\n          if (!getItemSubMenu(item)) {\n            return side;\n          }\n\n          const sides: React.ReactNode[] = Array.isArray(side) ? side : [side];\n          sides.push(<IconArrowRight size={mapIconSize[size]} />);\n          return sides;\n        }}\n        getGroupKey={getGroupId}\n        getGroupLabel={getGroupLabel}\n        getItemDisabled={getItemDisabled}\n        getItemStatus={getItemStatus}\n        getItemRef={(item) => itemsRefs[getKey(item)]}\n        groups={groupsProp}\n        getItemActive={(item) => getKey(item) === activeItem}\n        innerOffset={form === 'round' ? 'increased' : 'normal'}\n      />\n    </ContextMenuLevelWrapper>\n  );\n};\n\nexport const ContextMenuLevel = forwardRef(\n  ContextMenuLevelRender,\n) as ContextMenuLevelComponent;\n", "import * as React from 'react';\nimport { SVGProps } from 'react';\n\nconst IconArrowLeftSizeM = (props: SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path d=\"M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12l4.58-4.59z\" />\n  </svg>\n);\nexport default IconArrowLeftSizeM;\n", "import * as React from 'react';\nimport { SVGProps } from 'react';\n\nconst IconArrowLeftSizeS = (props: SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path\n      d=\"m6.407 8 4.297-4.297L9.29 2.289 3.579 8l5.711 5.711 1.414-1.414L6.407 8z\"\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default IconArrowLeftSizeS;\n", "import * as React from 'react';\nimport { SVGProps } from 'react';\n\nconst IconArrowLeftSizeXs = (props: SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path\n      d=\"m3.293 6 3.975-3.975.707.707L4.707 6l3.268 3.268-.707.707L3.293 6z\"\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default IconArrowLeftSizeXs;\n", "import { createIcon } from '../Icon';\nimport IconArrowLeftSizeM from './IconArrowLeft_size_m';\nimport IconArrowLeftSizeS from './IconArrowLeft_size_s';\nimport IconArrowLeftSizeXs from './IconArrowLeft_size_xs';\n\nexport const IconArrowLeft = createIcon({\n  l: IconArrowLeftSizeM,\n  m: IconArrowLeftSizeM,\n  s: IconArrowLeftSizeS,\n  xs: IconArrowLeftSizeXs,\n  name: 'IconArrowLeft',\n  renderType: { l: 'use', m: 'use', s: 'use', xs: 'use' },\n  color: 'mono',\n});\n", "import * as React from 'react';\nimport { SVGProps } from 'react';\n\nconst IconArrowRightSizeM = (props: SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path d=\"M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6-6-6z\" />\n  </svg>\n);\nexport default IconArrowRightSizeM;\n", "import * as React from 'react';\nimport { SVGProps } from 'react';\n\nconst IconArrowRightSizeS = (props: SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path\n      d=\"M9.594 8 5.297 3.703l1.414-1.414L12.423 8 6.71 13.711l-1.414-1.414L9.594 8z\"\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default IconArrowRightSizeS;\n", "import * as React from 'react';\nimport { SVGProps } from 'react';\n\nconst IconArrowRightSizeXs = (props: SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path\n      d=\"M8.975 6 5 9.975l-.707-.707L7.56 6 4.293 2.732 5 2.025 8.975 6z\"\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default IconArrowRightSizeXs;\n", "import { createIcon } from '../Icon';\nimport IconArrowRightSizeM from './IconArrowRight_size_m';\nimport IconArrowRightSizeS from './IconArrowRight_size_s';\nimport IconArrowRightSizeXs from './IconArrowRight_size_xs';\n\nexport const IconArrowRight = createIcon({\n  l: IconArrowRightSizeM,\n  m: IconArrowRightSizeM,\n  s: IconArrowRightSizeS,\n  xs: IconArrowRightSizeXs,\n  name: 'IconArrowRight',\n  renderType: { l: 'use', m: 'use', s: 'use', xs: 'use' },\n  color: 'mono',\n});\n", "import './ContextMenuLevelWrapper.css';\n\nimport React, { forwardRef } from 'react';\n\nimport { mapVerticalSpase } from '##/components/ListCanary';\nimport { Popover } from '##/components/Popover';\nimport { cnMixSpace } from '##/mixs/MixSpace';\nimport { cn } from '##/utils/bem';\n\nimport { contextMenuDefaultSize, ContextMenuLevelWrapperProps } from '../types';\n\nconst cnContextMenuLevelWrapper = cn('ContextMenuLevelWrapper');\n\nexport const ContextMenuLevelWrapper = forwardRef(\n  (props: ContextMenuLevelWrapperProps, ref: React.Ref<HTMLDivElement>) => {\n    const {\n      isMobile,\n      children,\n      className,\n      size = contextMenuDefaultSize,\n      ...otherProps\n    } = props;\n\n    if (isMobile) {\n      return (\n        <div className={className}>\n          <div\n            className={cnContextMenuLevelWrapper('Mobile', [\n              cnMixSpace({\n                pV: mapVerticalSpase[size],\n              }),\n            ])}\n            ref={ref}\n          >\n            {children}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <Popover {...otherProps} ref={ref} className={className}>\n        {children}\n      </Popover>\n    );\n  },\n);\n", "import { IconComponent } from '@consta/icons/Icon';\n\nimport {\n  defaultListPropForm,\n  ListPropForm,\n  listPropForm,\n} from '##/components/ListCanary';\nimport { ComponentSize } from '##/hooks/useComponentSize';\nimport { Animate } from '##/mixs/MixPopoverAnimate';\n\nimport { ClickOutsideHandler } from '../../hooks/useClickOutside/useClickOutside';\nimport { PropsWithAsAttributes } from '../../utils/types/PropsWithAsAttributes';\nimport {\n  PropsWithHTMLAttributes,\n  PropsWithHTMLAttributesAndRef,\n} from '../../utils/types/PropsWithHTMLAttributes';\nimport { Direction, PopoverPropOffset, Position } from '../Popover/Popover';\n\nexport const contextMenuSizes = ['m', 'xs', 's', 'l'] as const;\nexport type ContextMenuPropSize = typeof contextMenuSizes[number];\nexport const contextMenuDefaultSize: ContextMenuPropSize = contextMenuSizes[0];\n\nexport const contextMenuStatus = ['alert', 'success', 'warning'] as const;\nexport type ContextMenuStatus = typeof contextMenuStatus[number];\nexport const contextMenuDefaultStatus: ContextMenuStatus = contextMenuStatus[0];\n\nexport const contextMenuForm = listPropForm;\nexport type ContextMenuForm = ListPropForm;\nexport const defaultContextMenuForm = defaultListPropForm;\n\nexport const contextMenuPropSubMenuDirections = [\n  'rightStartUp',\n  'rightStartDown',\n  'leftStartUp',\n  'leftStartDown',\n] as const;\nexport type ContextMenuPropSubMenuDirection =\n  typeof contextMenuPropSubMenuDirections[number];\nexport const contextMenuPropDefaultSubMenuDirection: ContextMenuPropSubMenuDirection =\n  contextMenuPropSubMenuDirections[0];\n\nexport type ContextMenuPropOnClick<ITEM> = (params: {\n  e: React.MouseEvent<HTMLDivElement>;\n  item: ITEM;\n}) => void;\n\nexport type ContextMenuGroupDefault = {\n  label?: string;\n  id: number;\n};\n\nexport type ContextMenuItemDefault = {\n  label: string | number;\n  key?: string | number;\n  rightSide?: React.ReactNode;\n  rightIcon?: IconComponent;\n  leftSide?: React.ReactNode;\n  leftIcon?: IconComponent;\n  subMenu?: ContextMenuItemDefault[];\n  status?: ContextMenuStatus;\n  disabled?: boolean;\n  groupId?: number;\n  onClick?: ContextMenuPropOnClick<ContextMenuItemDefault>;\n  as?: keyof JSX.IntrinsicElements;\n  attributes?: JSX.IntrinsicElements[keyof JSX.IntrinsicElements];\n};\n\nexport type ContextMenuPropSortGroup = (\n  a: string | number,\n  b: string | number,\n) => number;\n\nexport type ContextMenuPropGetItemLabel<ITEM> = (item: ITEM) => string | number;\n\nexport type ContextMenuPropGetItemRightSide<ITEM> = (\n  item: ITEM,\n) => React.ReactNode | undefined;\n\nexport type ContextMenuPropGetItemLeftSide<ITEM> = (\n  item: ITEM,\n) => React.ReactNode | undefined;\n\nexport type ContextMenuPropGetItemSubMenu<ITEM> = (\n  item: ITEM,\n) => ITEM[] | undefined;\n\nexport type ContextMenuPropGetItemStatus<ITEM> = (\n  item: ITEM,\n) => ContextMenuStatus | undefined;\n\nexport type ContextMenuPropGetItemKey<ITEM> = (\n  item: ITEM,\n) => string | number | undefined;\n\nexport type ContextMenuPropGetItemOnClick<ITEM> = (\n  item: ITEM,\n) => ContextMenuPropOnClick<ITEM> | undefined;\n\nexport type ContextMenuPropGetItemDisabled<ITEM> = (\n  item: ITEM,\n) => boolean | undefined;\n\nexport type ContextMenuPropGetItemAs<ITEM> = (\n  item: ITEM,\n) => keyof JSX.IntrinsicElements | undefined;\n\nexport type ContextMenuPropGetItemAttributes<ITEM> = (\n  item: ITEM,\n) => JSX.IntrinsicElements[keyof JSX.IntrinsicElements] | undefined;\n\nexport type ContextMenuPropGetItemGroupId<ITEM> = (\n  item: ITEM,\n) => number | undefined;\n\nexport type ContextMenuPropGetItemRightIcon<ITEM> = (\n  item: ITEM,\n) => IconComponent | undefined;\n\nexport type ContextMenuPropGetItemLeftIcon<ITEM> = (\n  item: ITEM,\n) => IconComponent | undefined;\n\nexport type ContextMenuPropGetGroupLabel<GROUP> = (\n  group: GROUP,\n) => string | undefined;\nexport type ContextMenuPropGetGroupId<GROUP> = (group: GROUP) => number;\n\ntype PositioningProps =\n  | {\n      anchorRef: React.RefObject<HTMLElement>;\n      position?: never;\n    }\n  | {\n      anchorRef?: never;\n      position: Position;\n    };\n\nexport type MappersItem<ITEM> = {\n  getItemLabel?: ContextMenuPropGetItemLabel<ITEM>;\n  getItemRightSide?: ContextMenuPropGetItemRightSide<ITEM>;\n  getItemLeftSide?: ContextMenuPropGetItemLeftSide<ITEM>;\n  getItemSubMenu?: ContextMenuPropGetItemSubMenu<ITEM>;\n  getItemStatus?: ContextMenuPropGetItemStatus<ITEM>;\n  getItemDisabled?: ContextMenuPropGetItemDisabled<ITEM>;\n  getItemKey?: ContextMenuPropGetItemKey<ITEM>;\n  getItemOnClick?: ContextMenuPropGetItemOnClick<ITEM>;\n  getItemAs?: ContextMenuPropGetItemAs<ITEM>;\n  getItemAttributes?: ContextMenuPropGetItemAttributes<ITEM>;\n  getItemGroupId?: ContextMenuPropGetItemGroupId<ITEM>;\n  getItemLeftIcon?: ContextMenuPropGetItemLeftIcon<ITEM>;\n  getItemRightIcon?: ContextMenuPropGetItemRightIcon<ITEM>;\n};\n\nexport type MappersGroup<GROUP> = {\n  getGroupLabel?: ContextMenuPropGetGroupLabel<GROUP>;\n  getGroupId?: ContextMenuPropGetGroupId<GROUP>;\n};\n\nexport type Level<ITEM> = {\n  items: ITEM[];\n  activeItem?: string;\n  direction?: Direction;\n  possibleDirections?: readonly Direction[];\n  offset?: PopoverPropOffset;\n  parent?: ITEM;\n  anchorRef?: React.RefObject<HTMLElement>;\n  position?: Position;\n};\n\nexport type AddLevel<ITEM> = (params: {\n  level: number;\n  items: ITEM[];\n  parent?: ITEM;\n  anchorRef?: React.RefObject<HTMLElement>;\n  position?: Position;\n  activeItem: string;\n}) => void;\n\nexport type ContextMenuProps<\n  ITEM = ContextMenuItemDefault,\n  GROUP = ContextMenuGroupDefault,\n> = PropsWithHTMLAttributesAndRef<\n  {\n    items: ITEM[];\n    size?: ContextMenuPropSize;\n    direction?: Direction;\n    offset?: PopoverPropOffset;\n    groups?: GROUP[];\n    sortGroup?: ContextMenuPropSortGroup;\n    onItemClick?: ContextMenuPropOnClick<ITEM>;\n    possibleDirections?: readonly Direction[];\n    subMenuDirection?: ContextMenuPropSubMenuDirection;\n    spareDirection?: Direction;\n    onSetDirection?: (direction: Direction) => void;\n    onClickOutside?: ClickOutsideHandler;\n    isOpen?: boolean;\n    form?: ContextMenuForm;\n    isMobile?: boolean;\n  } & MappersItem<ITEM> &\n    MappersGroup<GROUP> &\n    PositioningProps,\n  HTMLDivElement\n> &\n  (GROUP extends { id: ContextMenuGroupDefault['id'] | unknown }\n    ? {}\n    : { getGroupId: ContextMenuPropGetGroupId<GROUP> }) &\n  (ITEM extends { label: ContextMenuItemDefault['label'] }\n    ? {}\n    : { getItemLabel: ContextMenuPropGetItemLabel<ITEM> });\n\nexport type ContextMenuLevelsProps<\n  ITEM = ContextMenuItemDefault,\n  GROUP = ContextMenuGroupDefault,\n> = ContextMenuProps<ITEM, GROUP> & {\n  setComponentSize: React.Dispatch<React.SetStateAction<ComponentSize>>;\n  disableAnimationBack: () => void;\n  enableAnimationBack: () => void;\n};\n\nexport type ContextMenuLevelsComponent = <\n  ITEM = ContextMenuItemDefault,\n  GROUP = ContextMenuGroupDefault,\n>(\n  props: ContextMenuLevelsProps<ITEM, GROUP>,\n) => React.ReactElement | null;\n\nexport type ContextMenuComponent = <\n  ITEM = ContextMenuItemDefault,\n  GROUP = ContextMenuGroupDefault,\n>(\n  props: ContextMenuProps<ITEM, GROUP>,\n) => React.ReactElement | null;\n\nexport type ContextMenuLevelProps<\n  ITEM = ContextMenuItemDefault,\n  GROUP = ContextMenuGroupDefault,\n> = Omit<\n  ContextMenuProps<ITEM, GROUP>,\n  | 'subMenuDirection'\n  | 'onClickOutside'\n  | 'setComponentSize'\n  | 'animationBack'\n  | 'disableAnimationBack'\n  | 'enableAnimationBack'\n  | keyof MappersItem<ITEM>\n  | keyof MappersGroup<GROUP>\n> & {\n  parent?: ITEM;\n  levelDepth: number;\n  addLevel: AddLevel<ITEM>;\n  deleteLevel: (level: number) => void;\n  activeItem?: string;\n  onSetDirection?: (direction: Direction) => void;\n  hoveredParenLevel: number;\n  setHoveredParenLevel: (level: number) => void;\n  animate: Animate;\n} & Required<MappersItem<ITEM>> &\n  Required<MappersGroup<GROUP>>;\n\nexport type ContextMenuLevelComponent = <ITEM, GROUP>(\n  props: ContextMenuLevelProps<ITEM, GROUP>,\n  ref: React.Ref<HTMLElement>,\n) => React.ReactElement | null;\n\nexport type ContextMenuItemProps<\n  AS extends keyof JSX.IntrinsicElements = 'div',\n> = PropsWithAsAttributes<\n  Omit<ContextMenuItemDefault, 'onClick' | 'attributes' | 'key'> & {\n    size?: ContextMenuPropSize;\n    active: boolean;\n    withSubMenu: boolean;\n  },\n  AS\n> &\n  React.RefAttributes<HTMLDivElement>;\n\nexport type ContextMenuItemComponent = <\n  AS extends keyof JSX.IntrinsicElements = 'div',\n>(\n  props: ContextMenuItemProps<AS>,\n  ref: React.Ref<HTMLElement>,\n) => React.ReactElement | null;\n\nexport type GetLevelsParams<ITEM> = {\n  levels: Level<ITEM>[];\n  items: ITEM[];\n  getItemSubMenu: ContextMenuPropGetItemSubMenu<ITEM>;\n  getItemKey: ContextMenuPropGetItemKey<ITEM>;\n};\n\nexport type ContextMenuWrapperProps = PropsWithHTMLAttributes<\n  {\n    children: React.ReactNode;\n    isOpen?: boolean;\n    isMobile?: boolean;\n    form?: ContextMenuForm;\n    onClickOutside?: ClickOutsideHandler;\n    spareDirection?: Direction;\n    possibleDirections?: readonly Direction[];\n    size?: ContextMenuPropSize;\n    direction?: Direction;\n    offset?: PopoverPropOffset;\n    anchorRef?: React.RefObject<HTMLElement>;\n    position?: Position;\n    onSetDirection?: (direction: Direction) => void;\n    className?: string;\n    animationBack?: boolean;\n  },\n  HTMLDivElement\n>;\n\nexport type ContextMenuLevelWrapperProps = PropsWithHTMLAttributesAndRef<\n  {\n    children: React.ReactNode;\n    isOpen?: boolean;\n    isMobile?: boolean;\n    form?: ContextMenuForm;\n    onClickOutside?: ClickOutsideHandler;\n    spareDirection?: Direction;\n    possibleDirections?: readonly Direction[];\n    size?: ContextMenuPropSize;\n    direction?: Direction;\n    offset?: PopoverPropOffset;\n    anchorRef?: React.RefObject<HTMLElement>;\n    position?: Position;\n    onSetDirection?: (direction: Direction) => void;\n    classname?: string;\n  },\n  HTMLDivElement\n>;\n", "import { isNotNil } from '../../utils/type-guards';\nimport {\n  ContextMenuGroupDefault,\n  ContextMenuItemDefault,\n  ContextMenuLevelsProps,\n  ContextMenuPropGetGroupId,\n  ContextMenuPropGetGroupLabel,\n  ContextMenuPropGetItemAs,\n  ContextMenuPropGetItemAttributes,\n  ContextMenuPropGetItemDisabled,\n  ContextMenuPropGetItemGroupId,\n  ContextMenuPropGetItemKey,\n  ContextMenuPropGetItemLabel,\n  ContextMenuPropGetItemLeftIcon,\n  ContextMenuPropGetItemLeftSide,\n  ContextMenuPropGetItemOnClick,\n  ContextMenuPropGetItemRightIcon,\n  ContextMenuPropGetItemRightSide,\n  ContextMenuPropGetItemStatus,\n  ContextMenuPropGetItemSubMenu,\n  GetLevelsParams,\n  Level,\n} from './types';\n\nconst defaultGetItemKey: ContextMenuPropGetItemKey<ContextMenuItemDefault> = (\n  item,\n) => item.key || item.label;\nconst defaultGetItemRightSide: ContextMenuPropGetItemRightSide<\n  ContextMenuItemDefault\n> = (item) => item.rightSide;\nconst defaultGetItemLeftSide: ContextMenuPropGetItemLeftSide<\n  ContextMenuItemDefault\n> = (item) => item.leftSide;\nconst defaultGetItemRightIcon: ContextMenuPropGetItemRightIcon<\n  ContextMenuItemDefault\n> = (item) => item.rightIcon;\nconst defaultGetItemLeftIcon: ContextMenuPropGetItemLeftIcon<\n  ContextMenuItemDefault\n> = (item) => item.leftIcon;\nconst defaultGetItemStatus: ContextMenuPropGetItemStatus<\n  ContextMenuItemDefault\n> = (item) => item.status;\nconst defaultGetItemDisabled: ContextMenuPropGetItemDisabled<\n  ContextMenuItemDefault\n> = (item) => item.disabled;\nconst defaultGetItemLabel: ContextMenuPropGetItemLabel<\n  ContextMenuItemDefault\n> = (item) => item.label;\nconst defaultGetItemOnClick: ContextMenuPropGetItemOnClick<\n  ContextMenuItemDefault\n> = (item) => item.onClick;\nconst defaultGetItemSubMenu: ContextMenuPropGetItemSubMenu<\n  ContextMenuItemDefault\n> = (item) => item.subMenu;\nconst defaultGetItemAs: ContextMenuPropGetItemAs<ContextMenuItemDefault> = (\n  item,\n) => item.as;\nconst defaultGetItemAttributes: ContextMenuPropGetItemAttributes<\n  ContextMenuItemDefault\n> = (item) => item.attributes;\nconst defaultGetItemGroupId: ContextMenuPropGetItemGroupId<\n  ContextMenuItemDefault\n> = (item) => item.groupId;\n\nconst defaultGetGroupId: ContextMenuPropGetGroupId<ContextMenuGroupDefault> = (\n  group,\n) => group.id;\nconst defaultGetGroupLabel: ContextMenuPropGetGroupLabel<\n  ContextMenuGroupDefault\n> = (group) => group.label;\n\nexport function withDefaultGetters<ITEM, GROUP>(\n  props: ContextMenuLevelsProps<ITEM, GROUP>,\n) {\n  return {\n    ...props,\n    getItemKey: props.getItemKey || defaultGetItemKey,\n    getItemLabel: props.getItemLabel || defaultGetItemLabel,\n    getItemRightSide: props.getItemRightSide || defaultGetItemRightSide,\n    getItemLeftSide: props.getItemLeftSide || defaultGetItemLeftSide,\n    getItemRightIcon: props.getItemRightIcon || defaultGetItemRightIcon,\n    getItemLeftIcon: props.getItemLeftIcon || defaultGetItemLeftIcon,\n    getItemSubMenu: props.getItemSubMenu || defaultGetItemSubMenu,\n    getItemStatus: props.getItemStatus || defaultGetItemStatus,\n    getItemDisabled: props.getItemDisabled || defaultGetItemDisabled,\n    getItemOnClick: props.getItemOnClick || defaultGetItemOnClick,\n    getItemAs: props.getItemAs || defaultGetItemAs,\n    getItemAttributes: props.getItemAttributes || defaultGetItemAttributes,\n    getItemGroupId: props.getItemGroupId || defaultGetItemGroupId,\n    getGroupId: props.getGroupId || defaultGetGroupId,\n    getGroupLabel: props.getGroupLabel || defaultGetGroupLabel,\n  };\n}\n\nconst findItem = <ITEM>(\n  params: Omit<GetLevelsParams<ITEM>, 'levels'> & {\n    key: ContextMenuItemDefault['key'];\n  },\n): ITEM | undefined => {\n  const { items, getItemKey, getItemSubMenu, key } = params;\n  for (const item of items) {\n    if (getItemKey(item) === key) {\n      return item;\n    }\n    const subItems =\n      typeof getItemSubMenu === 'function' && getItemSubMenu(item);\n    if (subItems) {\n      const subItem = findItem({\n        items: subItems,\n        key,\n        getItemKey,\n        getItemSubMenu,\n      });\n      if (subItem) {\n        return subItem;\n      }\n    }\n  }\n  return undefined;\n};\n\nexport const getLevels = <ITEM>(\n  params: GetLevelsParams<ITEM>,\n): Level<ITEM>[] => {\n  const { levels, items, getItemKey, getItemSubMenu } = params;\n\n  return levels.map((level) => ({\n    ...level,\n    items: level.items\n      .map((item) =>\n        findItem({\n          items,\n          getItemSubMenu,\n          getItemKey,\n          key: getItemKey(item),\n        }),\n      )\n      .filter(isNotNil),\n  }));\n};\n", "import { useEffect, useLayoutEffect } from 'react';\n\nimport { ComponentSize, getElementSize } from '##/hooks/useComponentSize';\nimport { useMutableRef } from '##/hooks/useMutableRef';\n\nexport const useSize = (\n  refs: React.RefObject<HTMLDivElement>[],\n  setFn: React.Dispatch<React.SetStateAction<ComponentSize>>,\n  isActive?: boolean,\n) => {\n  const setRef = useMutableRef((newState: ComponentSize) => {\n    if (!isActive) {\n      return;\n    }\n\n    setFn((oldState) => {\n      if (\n        newState.height &&\n        newState.width &&\n        (oldState.height !== newState.height ||\n          oldState.width !== newState.width)\n      ) {\n        return newState;\n      }\n      return oldState;\n    });\n  });\n\n  const elementRef = refs?.[refs.length - 1];\n\n  useLayoutEffect(() => {\n    setRef.current(getElementSize(elementRef?.current));\n  }, [elementRef]);\n\n  useEffect(() => {\n    const element = elementRef?.current;\n\n    const resizeObserver = new ResizeObserver((res) => {\n      setRef.current(getElementSize(res[0].target as HTMLElement));\n    });\n\n    element && resizeObserver.observe(element);\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [elementRef]);\n};\n", "import './ContextMenuWrapper.css';\n\nimport React, { Fragment, useCallback, useState } from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport { cnListBox, mapVerticalSpase } from '##/components/ListCanary';\nimport { Direction, Popover } from '##/components/Popover';\nimport { useFlag } from '##/hooks/useFlag';\nimport { useMutableRef } from '##/hooks/useMutableRef';\nimport { animateTimeout, cnMixPopoverAnimate } from '##/mixs/MixPopoverAnimate';\nimport { cnMixSpace } from '##/mixs/MixSpace';\nimport { cn } from '##/utils/bem';\n\nimport {\n  contextMenuDefaultSize,\n  ContextMenuWrapperProps,\n  defaultContextMenuForm,\n} from '../types';\n\nconst cnContextMenuWrapper = cn('ContextMenuWrapper');\n\nexport const ContextMenuWrapper = (props: ContextMenuWrapperProps) => {\n  const {\n    isMobile,\n    children,\n    form = defaultContextMenuForm,\n    isOpen,\n    size = contextMenuDefaultSize,\n    anchorRef,\n    possibleDirections,\n    position,\n    direction: directionProp,\n    spareDirection,\n    onClickOutside,\n    offset,\n    onSetDirection: onSetDirectionProp,\n    className,\n    animationBack,\n    style,\n  } = props;\n\n  const [innerAnimation, setInnerAnimation] = useFlag(isMobile);\n  // запоминаем позицию посднего удовлетворяющего разворота,\n  // для того чтоб следующий экран разворачивался в эту же строну.\n  const [direction, setSirection] = useState(directionProp);\n\n  const onSetDirectionRef = useMutableRef(onSetDirectionProp);\n\n  const onSetDirection = useCallback((direction: Direction) => {\n    setSirection(direction);\n    onSetDirectionRef.current?.(direction);\n  }, []);\n\n  if (isMobile) {\n    return (\n      <Transition\n        timeout={animateTimeout}\n        in={isOpen}\n        unmountOnExit\n        onEntered={setInnerAnimation.on}\n        onExit={setInnerAnimation.off}\n      >\n        {(animate) => (\n          <Popover\n            className={cnContextMenuWrapper({ animationBack, innerAnimation }, [\n              cnListBox({ size, form, border: true, shadow: true }),\n              cnMixSpace({\n                pV: mapVerticalSpase[size],\n              }),\n              cnMixPopoverAnimate({ animate }),\n              className,\n            ])}\n            anchorRef={anchorRef}\n            possibleDirections={possibleDirections}\n            position={position}\n            direction={direction}\n            spareDirection={spareDirection}\n            onClickOutside={onClickOutside}\n            offset={offset}\n            onSetDirection={onSetDirection}\n            style={style}\n          >\n            {children}\n          </Popover>\n        )}\n      </Transition>\n    );\n  }\n\n  return <Fragment key={ContextMenuWrapper.name}>{children}</Fragment>;\n};\n", "import './BreadcrumbsItem.css';\n\nimport { IconArrowRight } from '@consta/icons/IconArrowRight';\nimport { IconSelect } from '@consta/icons/IconSelect';\nimport React, { forwardRef, useRef } from 'react';\n\nimport { useFlag } from '../../../hooks/useFlag/useFlag';\nimport { cnMixSpace } from '../../../mixs/MixSpace/MixSpace';\nimport { cn } from '../../../utils/bem';\nimport { getByMap } from '../../../utils/getByMap';\nimport { Button } from '../../Button/Button';\nimport { ContextMenu } from '../../ContextMenu/ContextMenu';\nimport { Text } from '../../Text/Text';\nimport {\n  contextMenuSizeMap,\n  getItemAs,\n  getItemAttributes,\n} from '../BreadcrumbsMore/BreadcrumbsMore';\nimport { iconSizeMap } from '../helpers';\nimport {\n  BreadcrumbsItemComponent,\n  BreadcrumbsItemProps,\n  BreadcrumbsPropOnItemClick,\n} from '../types';\n\nexport const cnBreadcrumbsItem = cn('BreadcrumbsItem');\n\nfunction BreadcrumbsItemRender<ITEM>(\n  props: BreadcrumbsItemProps<ITEM>,\n  ref: React.Ref<HTMLLIElement>,\n) {\n  const {\n    className,\n    onItemClick: onItemClickProp,\n    item,\n    size,\n    onlyIcon: onlyIconProp,\n    delimiter,\n    active,\n    getItemHref,\n    getItemIcon,\n    getItemLabel,\n    getItemSubMenu,\n    children,\n    ...otherProps\n  } = props;\n\n  const [open, setOpen] = useFlag();\n\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  const Icon = item && getItemIcon?.(item);\n  const onlyIcon = Icon && onlyIconProp;\n  const href = item && getItemHref?.(item);\n  const label = item && getItemLabel?.(item);\n  const subMenu = item && getItemSubMenu?.(item);\n\n  const iconSize = getByMap(iconSizeMap, size);\n  const linkProps = href\n    ? ({\n        as: 'a',\n        href,\n      } as const)\n    : ({\n        as: 'span',\n      } as const);\n\n  const handleClick: React.MouseEventHandler = (e) => {\n    item && onItemClickProp?.({ e, item });\n  };\n\n  const onItemClick: BreadcrumbsPropOnItemClick<ITEM> = ({ e, item }) => {\n    setOpen.off();\n    item && onItemClickProp?.({ e, item });\n  };\n\n  return (\n    <li\n      className={cnBreadcrumbsItem(null, [className])}\n      ref={ref}\n      {...otherProps}\n    >\n      {delimiter && (\n        <IconArrowRight\n          className={cnBreadcrumbsItem('Delimiter', [cnMixSpace({ mH: size })])}\n          view=\"ghost\"\n          size={iconSize}\n        />\n      )}\n      {children || (\n        <>\n          <Text\n            className={cnBreadcrumbsItem('Link', { active })}\n            view={active ? 'primary' : 'secondary'}\n            onClick={handleClick}\n            size={size}\n            truncate={!onlyIcon}\n            {...linkProps}\n          >\n            {Icon &&\n              (onlyIcon ? (\n                <Button\n                  type=\"button\"\n                  view=\"clear\"\n                  onlyIcon\n                  iconLeft={Icon}\n                  size={iconSize}\n                />\n              ) : (\n                <Icon\n                  className={cnBreadcrumbsItem('Icon', [\n                    cnMixSpace({ mR: 'xs' }),\n                  ])}\n                  size={iconSize}\n                />\n              ))}\n            {!onlyIcon && label}\n          </Text>\n          {subMenu && (\n            <button\n              ref={buttonRef}\n              onClick={setOpen.toggle}\n              type=\"button\"\n              className={cnBreadcrumbsItem('SelectButton')}\n            >\n              <IconSelect size=\"xs\" view={active ? 'primary' : 'secondary'} />\n            </button>\n          )}\n        </>\n      )}\n      {subMenu && (\n        <ContextMenu\n          isOpen={open}\n          items={subMenu}\n          getItemLabel={getItemLabel}\n          getItemSubMenu={getItemSubMenu}\n          getItemLeftIcon={getItemIcon}\n          onItemClick={onItemClick}\n          getItemAs={getItemAs(getItemHref)}\n          getItemAttributes={getItemAttributes(getItemHref)}\n          direction=\"downStartRight\"\n          possibleDirections={[\n            'downStartLeft',\n            'upStartLeft',\n            'downStartRight',\n            'upStartRight',\n          ]}\n          anchorRef={buttonRef}\n          offset=\"xs\"\n          onClickOutside={setOpen.off}\n          size={contextMenuSizeMap[size]}\n        />\n      )}\n    </li>\n  );\n}\n\nexport const BreadcrumbsItem = forwardRef(\n  BreadcrumbsItemRender,\n) as BreadcrumbsItemComponent;\n", "import {\n  BreadcrumbsPropGetItemHref,\n  BreadcrumbsPropGetItemIcon,\n  BreadcrumbsPropGetItemLabel,\n  BreadcrumbsPropGetItemOnClick,\n  BreadcrumbsPropGetItemSubMenu,\n  BreadcrumbsProps,\n  DefaultItem,\n} from './types';\n\nconst defaultGetItemLabel: BreadcrumbsPropGetItemLabel<DefaultItem> = (item) =>\n  item.label;\nconst defaultGetItemIcon: BreadcrumbsPropGetItemIcon<DefaultItem> = (item) =>\n  item.icon;\nconst defaultGetItemHref: BreadcrumbsPropGetItemHref<DefaultItem> = (item) =>\n  item.href;\nconst defaultGetItemOnClick: BreadcrumbsPropGetItemOnClick<DefaultItem> = (\n  item,\n) => item.onClick;\nconst defaultGetItemSubMenu: BreadcrumbsPropGetItemSubMenu<DefaultItem> = (\n  item,\n) => item.subMenu;\n\nexport function withDefaultGetters(props: BreadcrumbsProps) {\n  return {\n    ...props,\n    getItemLabel: props.getItemLabel || defaultGetItemLabel,\n    getItemHref: props.getItemHref || defaultGetItemHref,\n    getItemOnClick: props.getItemOnClick || defaultGetItemOnClick,\n    getItemIcon: props.getItemIcon || defaultGetItemIcon,\n    getItemSubMenu: props.getItemSubMenu || defaultGetItemSubMenu,\n  };\n}\n\nexport const iconSizeMap = {\n  xs: 'xs',\n  s: 'xs',\n  m: 's',\n  l: 's',\n} as const;\n", "import { useMemo } from 'react';\n\nimport { useHideElementsInLine } from '##/hooks/useHideElementsInLineCanary';\nimport { useRefs } from '##/hooks/useRefs';\nimport { useResizeObserved } from '##/hooks/useResizeObserved';\n\nconst useReadyToHideItems = <ITEM>(items: ITEM[]) =>\n  useMemo(() => {\n    const returnedItems = [...items];\n    const first = returnedItems.shift();\n    const last = returnedItems.pop();\n    return [first, returnedItems, last] as const;\n  }, [items]);\n\nconst getLastWidth = (\n  wrapperWidth: number,\n  fistWidth: number,\n  itemsDimensions: number[],\n  visibleMap: boolean[],\n) => {\n  const widthExceptLast =\n    fistWidth +\n    itemsDimensions.reduce(\n      (previous, current, currentIndex) =>\n        previous + (!visibleMap[currentIndex] ? 0 : current),\n      0,\n    );\n\n  const lastWidthCalculate = wrapperWidth - widthExceptLast;\n\n  return `${lastWidthCalculate}px`;\n};\n\nconst getCompression = (componentWidth: number) => {\n  if (componentWidth <= 380) {\n    return 's';\n  }\n  if (componentWidth <= 900) {\n    return 'm';\n  }\n  if (componentWidth <= 1200) {\n    return 'l';\n  }\n  return 'xl';\n};\n\nexport const useElements = <ITEM>(items: ITEM[]) => {\n  const [firstItem, readyToHideItems, lastItem] = useReadyToHideItems(items);\n\n  const noHideElementsRef = useRefs<HTMLLIElement>(2);\n\n  const noHideElementsSize = useResizeObserved(noHideElementsRef, (el) =>\n    el\n      ? parseInt(getComputedStyle(el).marginRight, 10) +\n        parseInt(getComputedStyle(el).marginLeft, 10) +\n        el.offsetWidth\n      : 0,\n  );\n\n  const noHideElementsSizeSum = noHideElementsSize.reduce(\n    (previous, current) => previous + current,\n    0,\n  );\n\n  const { elementsSizes, parentSize, visibleMap, parentRef, elementsRefs } =\n    useHideElementsInLine<HTMLLIElement, HTMLUListElement>(\n      readyToHideItems.length + 1,\n      0,\n      noHideElementsSizeSum,\n    );\n\n  const lastWidth = getLastWidth(\n    parentSize,\n    noHideElementsSize[0],\n    elementsSizes,\n    visibleMap,\n  );\n\n  const compression = getCompression(parentSize);\n\n  const hiddenItems = visibleMap\n    .map((element, index) => {\n      if (!element && index !== 0) {\n        return items[index];\n      }\n    })\n    .filter((item) => Boolean(item)) as ITEM[];\n\n  return {\n    firstItem,\n    lastItem,\n    readyToHideItems,\n    hiddenItems,\n    visibleMap,\n    firstItemRef: noHideElementsRef[0],\n    lastItemRef: noHideElementsRef[1],\n    lastWidth,\n    compression,\n    parentRef,\n    elementsRefs,\n  };\n};\n", "import { useRef } from 'react';\n\nimport { useComponentSize } from '##/hooks/useComponentSize';\nimport { useRefs } from '##/hooks/useRefs';\nimport { useResizeObserved } from '##/hooks/useResizeObserved';\n\nconst createMap = (length: number, moreIndex: number) =>\n  new Array(length).fill(null).map((_, index) => index !== moreIndex);\n\nconst calcElementsVisibleSize = (elementsSizes: number[], map: boolean[]) => {\n  let sum = 0;\n  for (let index = 0; index < map.length; index++) {\n    sum += map[index] ? elementsSizes[index] : 0;\n  }\n  return sum;\n};\n\nexport const useHideElementsInLine = <\n  ELEMENT extends HTMLElement = HTMLDivElement,\n  PARENT extends HTMLElement = HTMLDivElement,\n>(\n  length: number,\n  moreIndex = length - 1,\n  busy = 0,\n  deps: unknown[] = [],\n) => {\n  const elementsRefs = useRefs<ELEMENT>(length, deps);\n  const parentRef = useRef<PARENT>(null);\n  const parentSize = useComponentSize(parentRef).width;\n  const elementsSizes = useResizeObserved(elementsRefs, (el) => {\n    if (el) {\n      const { marginRight, marginLeft } = getComputedStyle(el);\n      return (\n        parseInt(marginRight, 10) + parseInt(marginLeft, 10) + el.offsetWidth\n      );\n    }\n\n    return 0;\n  });\n\n  const map = createMap(length, moreIndex);\n\n  const hideByIndex = (index: number) => {\n    if (!elementsSizes[index] || index === moreIndex) {\n      return;\n    }\n\n    const elementsSize = calcElementsVisibleSize(elementsSizes, map);\n\n    if (elementsSize + busy > parentSize) {\n      map[index] = false;\n      map[moreIndex] = true;\n    }\n  };\n\n  for (let index = 0; index < elementsSizes.length; index++) {\n    // Скрываем элемент слева  от `more`\n    hideByIndex(moreIndex - index);\n    // Скрываем элемент справа от `more`\n    hideByIndex(moreIndex + index);\n  }\n\n  return {\n    visibleMap: map,\n    elementsRefs,\n    parentRef,\n    elementsSizes,\n    parentSize,\n  };\n};\n", "import './BreadcrumbsFitModeScroll.css';\n\nimport React, { forwardRef, useEffect, useRef } from 'react';\n\nimport { useForkRef } from '../../../hooks/useForkRef/useForkRef';\nimport { cn } from '../../../utils/bem';\nimport { BreadcrumbsFitModeScrollComponent } from '../types';\n\nexport const cnBreadcrumbsFitModeScroll = cn('BreadcrumbsFitModeScroll');\n\nexport const BreadcrumbsFitModeScroll: BreadcrumbsFitModeScrollComponent =\n  forwardRef((props, ref) => {\n    const { items, className, renderItem, ...otherProps } = props;\n\n    const rootRef = useRef<HTMLUListElement>(null);\n\n    useEffect(() => {\n      rootRef.current?.scrollTo({\n        left: rootRef.current?.scrollWidth,\n      });\n    }, []);\n\n    return (\n      <ul\n        className={cnBreadcrumbsFitModeScroll(null, [className])}\n        ref={useForkRef([rootRef, ref])}\n        {...otherProps}\n      >\n        {items.map((item, index) =>\n          renderItem(item, index, index === 0, index === items.length - 1),\n        )}\n      </ul>\n    );\n  });\n", "import { IconComponent } from '@consta/icons/Icon';\n\nimport { PropsWithHTMLAttributesAndRef } from '../../utils/types/PropsWithHTMLAttributes';\n\nexport const breadcrumbPropSize = ['m', 'xs', 's', 'l'] as const;\nexport type BreadcrumbPropSize = typeof breadcrumbPropSize[number];\nexport const breadcrumbPropSizeDefault = breadcrumbPropSize[0];\n\nexport const breadcrumbPropFitMode = ['dropdown', 'scroll'] as const;\nexport type BreadcrumbPropFitMode = typeof breadcrumbPropFitMode[number];\nexport const breadcrumbPropFitModeDefault = breadcrumbPropFitMode[0];\n\nexport type BreadcrumbsPropGetItemLabel<ITEM> = (item: ITEM) => string;\nexport type BreadcrumbsPropGetItemHref<ITEM> = (\n  item: ITEM,\n) => string | undefined;\nexport type BreadcrumbsPropGetItemIcon<ITEM> = (\n  item: ITEM,\n) => IconComponent | undefined;\nexport type BreadcrumbsPropGetItemSubMenu<ITEM> = (\n  item: ITEM,\n) => ITEM[] | undefined;\nexport type BreadcrumbsPropGetItemOnClick<ITEM> = (\n  item: ITEM,\n) => React.MouseEventHandler | undefined;\nexport type BreadcrumbsPropOnItemClick<ITEM> = (props: {\n  item: ITEM;\n  e: React.MouseEvent;\n}) => void;\n\nexport type DefaultItem = {\n  label: string;\n  icon?: IconComponent;\n  href?: string;\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>;\n  subMenu?: DefaultItem[];\n};\n\nexport type RenderItem<ITEM> = (\n  item: ITEM | undefined,\n  index: number | string,\n  isFirst?: boolean,\n  isLast?: boolean,\n  ref?: React.Ref<HTMLLIElement>,\n  hidden?: boolean,\n) => React.ReactElement | undefined;\n\nexport type BreadcrumbsProps<ITEM = DefaultItem> =\n  PropsWithHTMLAttributesAndRef<\n    {\n      items: ITEM[];\n      getItemLabel?: BreadcrumbsPropGetItemLabel<ITEM>;\n      getItemHref?: BreadcrumbsPropGetItemHref<ITEM>;\n      getItemIcon?: BreadcrumbsPropGetItemIcon<ITEM>;\n      getItemOnClick?: BreadcrumbsPropGetItemOnClick<ITEM>;\n      getItemSubMenu?: BreadcrumbsPropGetItemSubMenu<ITEM>;\n      onItemClick?: BreadcrumbsPropOnItemClick<ITEM>;\n      size?: BreadcrumbPropSize;\n      onlyIconRoot?: boolean;\n      fitMode?: BreadcrumbPropFitMode;\n      lastItemIsLink?: boolean;\n    },\n    HTMLUListElement\n  > &\n    (ITEM extends { label: DefaultItem['label'] }\n      ? {}\n      : { getItemLabel: BreadcrumbsPropGetItemLabel<ITEM> });\n\nexport type BreadcrumbsComponent = <ITEM>(\n  props: BreadcrumbsProps<ITEM>,\n) => React.ReactElement | null;\n\nexport type BreadcrumbsMoreProps<ITEM> = PropsWithHTMLAttributesAndRef<\n  {\n    size: BreadcrumbPropSize;\n    items: ITEM[];\n    getItemLabel: BreadcrumbsPropGetItemLabel<ITEM>;\n    getItemHref: BreadcrumbsPropGetItemHref<ITEM>;\n    getItemIcon: BreadcrumbsPropGetItemIcon<ITEM>;\n    getItemSubMenu: BreadcrumbsPropGetItemSubMenu<ITEM>;\n    getItemOnClick: BreadcrumbsPropGetItemOnClick<ITEM>;\n    onItemClick?: BreadcrumbsPropOnItemClick<ITEM>;\n  },\n  HTMLLIElement\n>;\n\nexport type BreadcrumbsMoreComponent = <ITEM>(\n  props: BreadcrumbsMoreProps<ITEM>,\n) => React.ReactElement | null;\n\nexport type BreadcrumbsItemProps<ITEM> = PropsWithHTMLAttributesAndRef<\n  {\n    size: 'm' | 'xs' | 's' | 'l';\n    item?: ITEM;\n    getItemLabel?: BreadcrumbsPropGetItemLabel<ITEM>;\n    getItemHref?: BreadcrumbsPropGetItemHref<ITEM>;\n    getItemIcon?: BreadcrumbsPropGetItemIcon<ITEM>;\n    getItemSubMenu?: BreadcrumbsPropGetItemSubMenu<ITEM>;\n    active?: boolean;\n    onlyIcon?: boolean;\n    delimiter?: boolean;\n    onItemClick?: BreadcrumbsPropOnItemClick<ITEM>;\n  },\n  HTMLLIElement\n>;\n\nexport type BreadcrumbsItemComponent = <ITEM>(\n  props: BreadcrumbsItemProps<ITEM>,\n) => React.ReactElement | null;\n\nexport type BreadcrumbsFitModeDropdownProps<ITEM> =\n  PropsWithHTMLAttributesAndRef<\n    {\n      items: ITEM[];\n      getItemLabel: BreadcrumbsPropGetItemLabel<ITEM>;\n      getItemHref: BreadcrumbsPropGetItemHref<ITEM>;\n      getItemIcon: BreadcrumbsPropGetItemIcon<ITEM>;\n      getItemOnClick: BreadcrumbsPropGetItemOnClick<ITEM>;\n      getItemSubMenu: BreadcrumbsPropGetItemSubMenu<ITEM>;\n      onItemClick?: BreadcrumbsPropOnItemClick<ITEM>;\n      renderItem: RenderItem<ITEM>;\n      size: BreadcrumbPropSize;\n    },\n    HTMLUListElement\n  >;\n\nexport type BreadcrumbsFitModeDropdownComponent = <ITEM>(\n  props: BreadcrumbsFitModeDropdownProps<ITEM>,\n) => React.ReactElement | null;\n\nexport type BreadcrumbsFitModeScrollProps<ITEM> = PropsWithHTMLAttributesAndRef<\n  {\n    items: ITEM[];\n    renderItem: RenderItem<ITEM>;\n  },\n  HTMLUListElement\n>;\n\nexport type BreadcrumbsFitModeScrollComponent = <ITEM>(\n  props: BreadcrumbsFitModeScrollProps<ITEM>,\n) => React.ReactElement | null;\n\nexport type BreadcrumbsShortListComponent = <ITEM>(\n  props: BreadcrumbsFitModeScrollProps<ITEM>,\n) => React.ReactElement | null;\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "IconMeatballSizeM", "props", "React", "IconMeatballSizeS", "props", "React", "IconMeatballSizeXs", "props", "IconMeatball", "createIcon", "l", "IconMeatballSizeM", "m", "s", "IconMeatballSizeS", "xs", "IconMeatballSizeXs", "name", "renderType", "color", "import_react", "buttonPropSize", "buttonPropSizeDefault", "buttonPropView", "buttonPropViewDefault", "buttonPropWidth", "buttonPropWidthDefault", "buttonPropForm", "mapStableForm", "defaultClear", "defaultBrick", "brick", "brickDefault", "brickClear", "brickRound", "round", "roundClear", "roundBrick", "clearRound", "clearDefault", "clearBrick", "clearClear", "buttonPropFormDefault", "COMPONENT_NAME", "cnButton", "cn", "sizeMap", "xs", "s", "m", "l", "sizeMapOnlyIcon", "Button", "forwardRefWithAs", "props", "ref", "buttonRef", "useRef", "usePropsHandler", "size", "view", "width", "form", "iconLeft", "iconRight", "label", "className", "onClick", "disabled", "loading", "tabIndex", "as", "onlyIcon", "iconSizeProp", "iconSize", "otherProps", "IconOnly", "IconLeft", "IconRight", "title", "getByMap", "React", "handleClick", "e", "withIcon", "cnMixFocus", "useForkRef", "position", "import_react", "import_react", "React", "IconArrowLeftSizeM", "props", "React", "IconArrowLeftSizeS", "props", "React", "IconArrowLeftSizeXs", "props", "IconArrowLeft", "createIcon", "l", "IconArrowLeftSizeM", "m", "s", "IconArrowLeftSizeS", "xs", "IconArrowLeftSizeXs", "name", "renderType", "color", "React", "IconArrowRightSizeM", "props", "React", "IconArrowRightSizeS", "props", "React", "IconArrowRightSizeXs", "props", "IconArrowRight", "createIcon", "l", "IconArrowRightSizeM", "m", "s", "IconArrowRightSizeS", "xs", "IconArrowRightSizeXs", "name", "renderType", "color", "import_react", "import_react", "contextMenuSizes", "contextMenuDefaultSize", "contextMenuStatus", "contextMenuDefaultStatus", "defaultContextMenuForm", "defaultListPropForm", "contextMenuPropSubMenuDirections", "contextMenuPropDefaultSubMenuDirection", "cnContextMenuLevelWrapper", "cn", "ContextMenuLevelWrapper", "forwardRef", "props", "ref", "isMobile", "children", "className", "size", "contextMenuDefaultSize", "otherProps", "_excluded", "React", "cnMixSpace", "pV", "mapVerticalSpase", "cnContextMenuLevel", "cn", "timers", "clearTimers", "timer", "clearTimeout", "a", "closeDelay", "ContextMenuLevelRender", "props", "ref", "size", "contextMenuDefaultSize", "items", "groupsProp", "groups", "className", "form", "animate", "levelDepth", "activeItem", "addLevel", "deleteLevel", "setHoveredParenLevel", "hoveredParenLevel", "sortGroup", "onItemClick", "isOpen", "parent", "isMobile", "direction", "possibleDirections", "offset", "onSetDirection", "spareDirection", "anchorRef", "getItemLabel", "getItemRightSide", "getItemLeftSide", "getItemSubMenu", "getItemStatus", "getItemDisabled", "getItemKey", "getItemOnClick", "getItemAs", "getItemAttributes", "getItemGroupId", "getItemLeftIcon", "getItemRightIcon", "getGroupLabel", "getGroupId", "otherProps", "_excluded", "useFlag", "hovered", "setHovered", "getKey", "item", "toString", "itemsRefs", "useRefs", "map", "useEffect", "setTimeout", "addCurrentLevel", "subMenu", "disabled", "Array", "isArray", "key", "level", "onMouseEnter", "e", "c", "firstLevel", "React", "cnListBox", "border", "shadow", "cnMixSpace", "pV", "mapVerticalSpase", "cnMixPopoverAnimate", "on", "off", "IconArrowLeft", "mV", "b", "side", "sides", "push", "mapIconSize", "ContextMenuLevel", "forwardRef", "defaultGetItemKey", "item", "key", "label", "defaultGetItemRightSide", "rightSide", "defaultGetItemLeftSide", "leftSide", "defaultGetItemRightIcon", "rightIcon", "defaultGetItemLeftIcon", "leftIcon", "defaultGetItemStatus", "status", "defaultGetItemDisabled", "disabled", "defaultGetItemLabel", "defaultGetItemOnClick", "onClick", "defaultGetItemSubMenu", "subMenu", "defaultGetItemAs", "as", "defaultGetItemAttributes", "attributes", "defaultGetItemGroupId", "groupId", "defaultGetGroupId", "group", "id", "defaultGetGroupLabel", "withDefaultGetters", "props", "_objectSpread", "getItemKey", "getItemLabel", "getItemRightSide", "getItemLeftSide", "getItemRightIcon", "getItemLeftIcon", "getItemSubMenu", "getItemStatus", "getItemDisabled", "getItemOnClick", "getItemAs", "getItemAttributes", "getItemGroupId", "getGroupId", "getGroupLabel", "findItem", "params", "items", "_createForOfIteratorHelper", "subItems", "subItem", "a", "getLevels", "levels", "map", "level", "filter", "isNotNil", "import_react", "useSize", "refs", "setFn", "isActive", "setRef", "useMutableRef", "newState", "oldState", "height", "width", "elementRef", "length", "useLayoutEffect", "current", "getElementSize", "useEffect", "element", "resizeObserver", "ResizeObserver", "res", "target", "observe", "disconnect", "ContextMenuLevelsRender", "propsComponent", "ref", "props", "withDefaultGetters", "items", "anchorRef", "position", "direction", "possibleDirections", "offset", "onClickOutside", "getItemKey", "getItemLabel", "getItemSubMenu", "style", "spareDirection", "subMenuDirection", "subMenuDirectionProp", "contextMenuPropDefaultSubMenuDirection", "isMobile", "isOpen", "setComponentSize", "enableAnimationBack", "disableAnimationBack", "otherProps", "_excluded", "isOpenRef", "useMutableRef", "defaultLevels", "useState", "levels", "setLevels", "setSubMenuDirection", "hoveredParenLevel", "setHoveredParenLevel", "levelsRefs", "useRefs", "length", "addLevel", "a", "level", "activeItem", "parent", "newLevels", "oldDirection", "splice", "push", "contextMenuPropSubMenuDirections", "current", "deleteLevel", "_objectSpread", "useClickOutside", "isActive", "ignoreClicksInsideRefs", "handler", "useEffect", "clearTimers", "getLevels", "firstLevelRef", "useForkRef", "useSize", "React", "Fragment", "map", "index", "key", "last", "animateTimeout", "animate", "zIndex", "onSetDirection", "ContextMenuLevels", "forwardRef", "import_react", "cnContextMenuWrapper", "cn", "ContextMenuWrapper", "props", "isMobile", "children", "form", "defaultContextMenuForm", "isOpen", "size", "contextMenuDefaultSize", "anchorRef", "possibleDirections", "position", "directionProp", "direction", "spareDirection", "onClickOutside", "offset", "onSetDirectionProp", "onSetDirection", "className", "animationBack", "style", "useFlag", "innerAnimation", "setInnerAnimation", "useState", "setSirection", "onSetDirectionRef", "useMutableRef", "useCallback", "b", "current", "React", "animateTimeout", "on", "off", "animate", "cnListBox", "border", "shadow", "cnMixSpace", "pV", "mapVerticalSpase", "cnMixPopoverAnimate", "name", "COMPONENT_NAME", "ContextMenuRender", "props", "ref", "rest", "usePropsHandler", "useState", "width", "height", "componentSize", "setComponentSize", "useFlag", "animationBack", "setAnimationBack", "disableAnimationBack", "useDebounce", "off", "animateTimeout", "React", "_objectSpread", "style", "on", "ContextMenu", "forwardRef", "import_react", "defaultGetItemLabel", "item", "label", "defaultGetItemIcon", "icon", "defaultGetItemHref", "href", "defaultGetItemOnClick", "onClick", "defaultGetItemSubMenu", "subMenu", "withDefaultGetters", "props", "_objectSpread", "getItemLabel", "getItemHref", "getItemOnClick", "getItemIcon", "getItemSubMenu", "iconSizeMap", "xs", "s", "m", "l", "cnBreadcrumbsItem", "cn", "BreadcrumbsItemRender", "props", "ref", "className", "onItemClickProp", "onItemClick", "item", "size", "onlyIconProp", "onlyIcon", "delimiter", "active", "getItemHref", "getItemIcon", "getItemLabel", "getItemSubMenu", "children", "otherProps", "_excluded", "useFlag", "open", "setOpen", "buttonRef", "useRef", "Icon", "href", "label", "subMenu", "iconSize", "getByMap", "iconSizeMap", "linkProps", "as", "React", "cnMixSpace", "mH", "handleClick", "e", "mR", "toggle", "a", "off", "getItemAs", "getItemAttributes", "contextMenuSizeMap", "BreadcrumbsItem", "forwardRef", "cnBreadcrumbsMore", "cn", "getItemAs", "getItemHref", "item", "href", "getItemAttributes", "contextMenuSizeMap", "xs", "s", "m", "l", "BreadcrumbsMoreRender", "props", "ref", "size", "items", "className", "style", "getItemIcon", "getItemLabel", "getItemOnClickProp", "getItemOnClick", "getItemSubMenu", "onItemClickProp", "onItemClick", "otherProps", "_excluded", "useFlag", "open", "setOpen", "buttonRef", "useRef", "iconSize", "getByMap", "iconSizeMap", "useEffect", "off", "React", "cnBreadcrumbsMore", "_objectSpread", "IconMeatball", "toggle", "element", "b", "c", "e", "a", "BreadcrumbsMore", "forwardRef", "import_react", "import_react", "createMap", "length", "moreIndex", "Array", "fill", "map", "_", "index", "calcElementsVisibleSize", "elementsSizes", "sum", "useHideElementsInLine", "busy", "deps", "elementsRefs", "useRefs", "parentRef", "useRef", "parentSize", "useComponentSize", "width", "useResizeObserved", "el", "b", "getComputedStyle", "marginRight", "marginLeft", "parseInt", "offsetWidth", "hideByIndex", "elementsSize", "visibleMap", "useReadyToHideItems", "items", "useMemo", "returnedItems", "first", "shift", "last", "pop", "getLastWidth", "wrapperWidth", "fistWidth", "itemsDimensions", "visibleMap", "widthExceptLast", "reduce", "previous", "current", "currentIndex", "getCompression", "componentWidth", "useElements", "firstItem", "readyToHideItems", "lastItem", "noHideElementsRef", "useRefs", "noHideElementsSize", "useResizeObserved", "el", "parseInt", "getComputedStyle", "marginRight", "marginLeft", "offsetWidth", "noHideElementsSizeSum", "useHideElementsInLine", "length", "elementsSizes", "parentSize", "parentRef", "elementsRefs", "lastWidth", "compression", "hiddenItems", "map", "element", "index", "filter", "item", "firstItemRef", "lastItemRef", "cnBreadcrumbsFitModeDropdown", "cn", "BreadcrumbsFitModeDropdown", "forwardRef", "props", "ref", "items", "getItemHref", "getItemLabel", "getItemIcon", "getItemOnClick", "getItemSubMenu", "onItemClick", "size", "className", "renderItem", "otherProps", "_excluded", "useElements", "firstItem", "lastItem", "readyToHideItems", "visibleMap", "elementsRefs", "parentRef", "hiddenItems", "firstItemRef", "lastItemRef", "lastWidth", "compression", "rootRef", "useForkRef", "React", "removed", "length", "map", "item", "index", "import_react", "cnBreadcrumbsFitModeScroll", "cn", "BreadcrumbsFitModeScroll", "forwardRef", "props", "ref", "items", "className", "renderItem", "otherProps", "_excluded", "rootRef", "useRef", "useEffect", "a", "b", "current", "scrollTo", "left", "scrollWidth", "React", "useForkRef", "map", "item", "index", "length", "breadcrumbPropSize", "breadcrumbPropSizeDefault", "breadcrumbPropFitMode", "breadcrumbPropFitModeDefault", "cnBreadcrumbs", "cn", "BreadcrumbsRender", "props", "ref", "withDefaultGetters", "items", "getItemHref", "getItemLabel", "getItemIcon", "getItemOnClick", "getItemSubMenu", "onItemClick", "size", "breadcrumbPropSizeDefault", "onlyIconRoot", "className", "fitMode", "breadcrumbPropFitModeDefault", "lastItemIsLink", "otherProps", "_excluded", "shortList", "length", "renderItem", "item", "index", "isFirst", "isLast", "hidden", "handleClick", "a", "b", "e", "React", "map", "Breadcrumbs", "forwardRef"]
}
