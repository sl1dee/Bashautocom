{
  "version": 3,
  "sources": ["../../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js", "../../node_modules/@babel/runtime/helpers/esm/iterableToArray.js", "../../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js", "../../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js", "../../node_modules/@consta/src/utils/type-guards.ts"],
  "sourcesContent": ["import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}", "export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}", "export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}", "import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}", "export const isDefined = <T>(p: T): p is Exclude<T, undefined> =>\n  p !== undefined;\n\nexport const isNotNil = <T>(p: T): p is Exclude<T, undefined | null> =>\n  p !== undefined && p !== null;\n\nexport const isNumber = (value: unknown): value is number =>\n  typeof value === 'number';\n\nexport const isString = (value: unknown): value is string =>\n  typeof value === 'string';\n"],
  "mappings": ";;;;;;AACe,SAAR,mBAAoC,KAAK;AAC9C,MAAI,MAAM,QAAQ,GAAG;AAAG,WAAO,kBAAiB,GAAG;AACrD;;;ACHe,SAAR,iBAAkC,MAAM;AAC7C,MAAI,OAAO,WAAW,eAAe,KAAK,OAAO,QAAQ,KAAK,QAAQ,KAAK,YAAY,KAAK;AAAM,WAAO,MAAM,KAAK,IAAI;AAC1H;;;ACFe,SAAR,qBAAsC;AAC3C,QAAM,IAAI,UAAU,sIAAsI;AAC5J;;;ACEe,SAAR,mBAAoC,KAAK;AAC9C,SAAO,mBAAkB,GAAG,KAAK,iBAAgB,GAAG,KAAK,4BAA2B,GAAG,KAAK,mBAAkB;AAChH;;;ACHO,IAAMA,WAAW,SAAIC,GAAJ;AAAA,SACtBA,MAAC,UAAwB,SAANA;AADG;AAGjB,IAAMC,WAAW,SAACC,GAAD;AAAA,SACL,YAAjB,OAAOA;AADe;AAGjB,IAAMC,WAAW,SAACD,GAAD;AAAA,SACL,YAAjB,OAAOA;AADe;",
  "names": ["isNotNil", "p", "isNumber", "value", "isString"]
}
