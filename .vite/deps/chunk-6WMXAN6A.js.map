{
  "version": 3,
  "sources": ["../../node_modules/@consta/src/hooks/useChoiceGroup/useChoiceGroup.tsx"],
  "sourcesContent": ["import { isNotNil } from '##/utils/type-guards';\n\ntype GetKey<ITEM> = (item: ITEM) => string | number;\n\ntype GetOnChange<ITEM, EVENT> = (item: ITEM) => (e: EVENT) => void;\n\ntype GetChecked<ITEM> = (item: ITEM) => boolean;\n\ntype UseChoiceGroupValues<ITEM, EVENT> = {\n  getOnChange: GetOnChange<ITEM, EVENT>;\n  getChecked: GetChecked<ITEM>;\n};\n\ntype CallbackWithMultiple<ITEM, EVENT> = (props: {\n  e: EVENT;\n  value: ITEM[] | null;\n}) => void;\n\ntype CallbackWithoutMultiple<ITEM, EVENT> = (props: {\n  e: EVENT;\n  value: ITEM;\n}) => void;\n\ntype PropsWithMultiple<ITEM, EVENT> = {\n  multiple: true;\n  value: ITEM[] | null;\n  callBack: CallbackWithMultiple<ITEM, EVENT>;\n};\n\ntype PropsWithoutMultiple<ITEM, EVENT> = {\n  multiple: false;\n  value: ITEM | null;\n  callBack: CallbackWithoutMultiple<ITEM, EVENT>;\n};\n\ntype CommonProps<ITEM> = {\n  getKey: GetKey<ITEM>;\n};\n\ntype UseChoiceGroupProps<ITEM, EVENT> = CommonProps<ITEM> &\n  (PropsWithMultiple<ITEM, EVENT> | PropsWithoutMultiple<ITEM, EVENT>);\n\ntype FormatedItems<ITEM> = { [value: string]: ITEM };\n\nfunction isMultiple<ITEM, EVENT>(\n  params: UseChoiceGroupProps<ITEM, EVENT>,\n): params is CommonProps<ITEM> & PropsWithMultiple<ITEM, EVENT> {\n  return params.multiple;\n}\n\nfunction isNotMultiple<ITEM, EVENT>(\n  params: UseChoiceGroupProps<ITEM, EVENT>,\n): params is CommonProps<ITEM> & PropsWithoutMultiple<ITEM, EVENT> {\n  return !params.multiple;\n}\n\nfunction formatValue<ITEM>(\n  valueProp: ITEM | ITEM[] | null,\n  getKey: GetKey<ITEM>,\n  multiple?: boolean,\n) {\n  const valueByKey: FormatedItems<ITEM> = {};\n  if (!isNotNil(valueProp) && !Array.isArray(valueProp)) {\n    return valueByKey;\n  }\n  const value = multiple ? (valueProp as ITEM[]) : [valueProp as ITEM];\n  if (value && value.length > 0) {\n    for (const item of value) {\n      valueByKey[getKey(item)] = item;\n    }\n  }\n  return valueByKey;\n}\n\nexport function useChoiceGroup<ITEM, EVENT>(\n  props: UseChoiceGroupProps<ITEM, EVENT>,\n): UseChoiceGroupValues<ITEM, EVENT> {\n  const formatedValue = formatValue(props.value, props.getKey, props.multiple);\n\n  const getChecked: GetChecked<ITEM> = (item) =>\n    Object.prototype.hasOwnProperty.call(formatedValue, props.getKey(item));\n\n  const getOnChange: GetOnChange<ITEM, EVENT> = (selectedItem) => (e) => {\n    if (isMultiple(props)) {\n      let newValue: ITEM[] | null;\n\n      if (getChecked(selectedItem)) {\n        const value = props.value || [];\n        newValue = value.filter(\n          (item) => props.getKey(item) !== props.getKey(selectedItem),\n        );\n        if (newValue.length === 0) {\n          newValue = null;\n        }\n      } else {\n        newValue = props.value ? [...props.value] : [];\n        newValue.push(selectedItem);\n      }\n      props.callBack({ e, value: newValue });\n    }\n\n    if (isNotMultiple(props)) {\n      props.callBack({ e, value: selectedItem });\n    }\n  };\n\n  return {\n    getOnChange,\n    getChecked,\n  };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,SAASA,WACPC,GAC8D;AAC9D,SAAOA,EAAOC;AACf;AAED,SAASC,cACPF,GACiE;AACjE,SAAO,CAACA,EAAOC;AAChB;AAED,SAASE,YACPC,GACAC,GACAJ,GACA;AACA,MAAMK,IAAkC,CAAA;AACxC,MAAI,CAACC,SAASH,CAAD,KAAe,CAACI,MAAMC,QAAQL,CAAd;AAC3B,WAAOE;AAET,MAAMI,IAAQT,IAAYG,IAAuB,CAACA,CAAD;AACjD,MAAIM,KAAwB,IAAfA,EAAMC,QAAY;AAAA,QAAA,GAAA,IAAA,2BACVD,CADU;AAAA,QAAA;AAC7B,WAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,QAA0B;AAAA,YAAfE,IAAe,EAAA;AACxBN,UAAWD,EAAOO,CAAD,CAAP,IAAiBA;MAC5B;IAH4B,SAAAC,IAAA;AAAA,QAAA,EAAAA,EAAA;IAAA,UAAA;AAAA,QAAA,EAAA;IAAA;EAI9B;AACD,SAAOP;AACR;AAEM,SAASQ,eACdC,GACmC;AAAA,MAC7BC,IAAgBb,YAAYY,EAAML,OAAOK,EAAMV,QAAQU,EAAMd,QAAlC,GAE3BgB,IAA+B,SAACL,IAAD;AAAA,WACnCM,OAAOC,UAAUC,eAAeC,KAAKL,GAAeD,EAAMV,OAAOO,EAAb,CAApD;EADmC;AA2BrC,SAAO,EACLU,aAzB4C,SAAxCA,YAAyCC,IAAD;AAAA,WAAkB,SAACC,GAAM;AACrE,UAAIzB,WAAWgB,CAAD,GAAS;AACrB,YAAIU;AAEJ,YAAIR,EAAWM,EAAD,GAAgB;AAC5B,cAAMb,IAAQK,EAAML,SAAS,CAAA;AAC7Be,cAAWf,EAAMgB,OACf,SAACd,IAAD;AAAA,mBAAUG,EAAMV,OAAOO,EAAb,MAAuBG,EAAMV,OAAOkB,EAAb;UAAjC,CADS,GAGa,MAApBE,EAASd,WACXc,IAAW;QAEd;AACCA,cAAWV,EAAML,QAAN,mBAAkBK,EAAML,KAAxB,IAAiC,CAAA,GAC5Ce,EAASE,KAAKJ,EAAd;AAEFR,UAAMa,SAAS,EAAEJ,GAAAA,GAAGd,OAAOe,EAAZ,CAAf;MACD;AAEGvB,oBAAca,CAAD,KACfA,EAAMa,SAAS,EAAEJ,GAAAA,GAAGd,OAAOa,GAAZ,CAAf;IAEH;EAtB6C,GA0B5CN,YAAAA,EAFK;AAIR;",
  "names": ["isMultiple", "params", "multiple", "isNotMultiple", "formatValue", "valueProp", "getKey", "valueByKey", "isNotNil", "Array", "isArray", "value", "length", "item", "a", "useChoiceGroup", "props", "formatedValue", "getChecked", "Object", "prototype", "hasOwnProperty", "call", "getOnChange", "selectedItem", "e", "newValue", "filter", "push", "callBack"]
}
