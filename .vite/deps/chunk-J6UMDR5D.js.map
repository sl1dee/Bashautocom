{
  "version": 3,
  "sources": ["../../node_modules/@consta/src/components/Theme/presets/presetGpnDefault.ts", "../../node_modules/@consta/src/components/Theme/presets/presetGpnDark.ts", "../../node_modules/@consta/src/components/Theme/presets/presetGpnDisplay.ts", "../../node_modules/@consta/src/components/Theme/Theme.tsx"],
  "sourcesContent": ["import '../Theme.css';\nimport '../_color/Theme_color_gpnDefault.css';\nimport '../_color/Theme_color_gpnDark.css';\nimport '../_control/Theme_control_gpnDefault.css';\nimport '../_font/Theme_font_gpnDefault.css';\nimport '../_size/Theme_size_gpnDefault.css';\nimport '../_space/Theme_space_gpnDefault.css';\nimport '../_shadow/Theme_shadow_gpnDefault.css';\n\nimport { ThemePreset } from '../Theme';\n\nexport const presetGpnDefault: ThemePreset = {\n  color: {\n    primary: 'gpnDefault',\n    accent: 'gpnDark',\n    invert: 'gpnDark',\n  },\n  control: 'gpnDefault',\n  font: 'gpnDefault',\n  size: 'gpnDefault',\n  space: 'gpnDefault',\n  shadow: 'gpnDefault',\n};\n", "import '../Theme.css';\nimport '../_color/Theme_color_gpnDefault.css';\nimport '../_color/Theme_color_gpnDark.css';\nimport '../_control/Theme_control_gpnDefault.css';\nimport '../_font/Theme_font_gpnDefault.css';\nimport '../_size/Theme_size_gpnDefault.css';\nimport '../_space/Theme_space_gpnDefault.css';\nimport '../_shadow/Theme_shadow_gpnDefault.css';\n\nimport { ThemePreset } from '../Theme';\n\nexport const presetGpnDark: ThemePreset = {\n  color: {\n    primary: 'gpnDark',\n    accent: 'gpnDark',\n    invert: 'gpnDefault',\n  },\n  control: 'gpnDefault',\n  font: 'gpnDefault',\n  size: 'gpnDefault',\n  space: 'gpnDefault',\n  shadow: 'gpnDefault',\n};\n", "import '../Theme.css';\nimport '../_color/Theme_color_gpnDefault.css';\nimport '../_color/Theme_color_gpnDark.css';\nimport '../_color/Theme_color_gpnDisplay.css';\nimport '../_control/Theme_control_gpnDefault.css';\nimport '../_font/Theme_font_gpnDefault.css';\nimport '../_size/Theme_size_gpnDefault.css';\nimport '../_space/Theme_space_gpnDefault.css';\nimport '../_shadow/Theme_shadow_gpnDefault.css';\n\nimport { ThemePreset } from '../Theme';\n\nexport const presetGpnDisplay: ThemePreset = {\n  color: {\n    primary: 'gpnDisplay',\n    accent: 'gpnDark',\n    invert: 'gpnDefault',\n  },\n  control: 'gpnDefault',\n  font: 'gpnDefault',\n  size: 'gpnDefault',\n  space: 'gpnDefault',\n  shadow: 'gpnDefault',\n};\n", "import React, { createContext, useContext, useMemo } from 'react';\n\nimport { cn } from '../../utils/bem';\nimport { PropsWithHTMLAttributes } from '../../utils/types/PropsWithHTMLAttributes';\nimport { presetGpnDefault } from './presets/presetGpnDefault';\n\nexport { presetGpnDefault } from './presets/presetGpnDefault';\nexport { presetGpnDark } from './presets/presetGpnDark';\nexport { presetGpnDisplay } from './presets/presetGpnDisplay';\n\nexport type ThemePreset = {\n  color: {\n    primary: string;\n    accent: string;\n    invert: string;\n  };\n  control: string;\n  font: string;\n  size: string;\n  space: string;\n  shadow: string;\n};\n\ntype Props = {\n  preset: ThemePreset;\n};\n\nexport type ThemeProps = PropsWithHTMLAttributes<Props, HTMLDivElement>;\n\nexport const cnTheme = cn('Theme');\n\nexport const generateThemeClassNames = (preset: ThemePreset): ThemePreset => {\n  return {\n    color: {\n      primary: cnTheme({ color: preset.color.primary }),\n      accent: cnTheme({ color: preset.color.accent }),\n      invert: cnTheme({ color: preset.color.invert }),\n    },\n    control: cnTheme({ control: preset.control }),\n    font: cnTheme({ font: preset.font }),\n    size: cnTheme({ size: preset.size }),\n    space: cnTheme({ space: preset.space }),\n    shadow: cnTheme({ shadow: preset.shadow }),\n  };\n};\n\nexport const generateDeps = (preset: ThemePreset) => {\n  let deps = '';\n  Object.keys(preset).map((key) => {\n    if (key === 'color') {\n      deps += preset.color.accent + preset.color.invert + preset.color.primary;\n    } else {\n      deps += preset[key as unknown as keyof ThemePreset];\n    }\n  });\n  return deps;\n};\n\nconst defaultContextValue = {\n  theme: presetGpnDefault,\n  themeClassNames: generateThemeClassNames(presetGpnDefault),\n};\n\nexport const ThemeContext = createContext<{\n  theme: ThemePreset;\n  themeClassNames: ThemePreset;\n}>(defaultContextValue);\n\nexport const Theme = React.forwardRef<HTMLDivElement, ThemeProps>(\n  (props, ref) => {\n    const { className, children, preset, ...otherProps } = props;\n\n    const [value, mods] = useMemo(() => {\n      return [\n        { theme: preset, themeClassNames: generateThemeClassNames(preset) },\n        {\n          ...preset,\n          color: preset.color.primary,\n        },\n      ];\n    }, [generateDeps(preset)]);\n\n    return (\n      <ThemeContext.Provider value={value}>\n        <div {...otherProps} ref={ref} className={cnTheme(mods, [className])}>\n          {children}\n        </div>\n      </ThemeContext.Provider>\n    );\n  },\n);\n\nexport function useTheme() {\n  return useContext(ThemeContext);\n}\n"],
  "mappings": "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",
  "names": ["presetGpnDefault", "color", "primary", "accent", "invert", "control", "font", "size", "space", "shadow", "presetGpnDark", "color", "primary", "accent", "invert", "control", "font", "size", "space", "shadow", "presetGpnDisplay", "color", "primary", "accent", "invert", "control", "font", "size", "space", "shadow", "cnTheme", "cn", "generateThemeClassNames", "preset", "color", "primary", "accent", "invert", "control", "font", "size", "space", "shadow", "generateDeps", "deps", "Object", "keys", "map", "key", "defaultContextValue", "theme", "presetGpnDefault", "themeClassNames", "ThemeContext", "createContext", "Theme", "React", "forwardRef", "props", "ref", "className", "children", "otherProps", "useMemo", "value", "mods", "useTheme", "useContext"]
}
